syntax = "proto3";
package proto;
import "google/protobuf/any.proto";


// Types
message TypeBool {
	oneof Value {
		PredBoolFalse BoolFalse = 1;
		PredBoolTrue BoolTrue = 2;
	}
}
message TypeError {
	PredError Value = 1;
}
message TypeNull {
	PredNull Value = 1;
}
message TypeInputPeer {
	oneof Value {
		PredInputPeerEmpty InputPeerEmpty = 1;
		PredInputPeerSelf InputPeerSelf = 2;
		PredInputPeerChat InputPeerChat = 3;
		PredInputPeerUser InputPeerUser = 4;
		PredInputPeerChannel InputPeerChannel = 5;
	}
}
message TypeInputUser {
	oneof Value {
		PredInputUserEmpty InputUserEmpty = 1;
		PredInputUserSelf InputUserSelf = 2;
		PredInputUser InputUser = 3;
	}
}
message TypeInputContact {
	PredInputPhoneContact Value = 1;
}
message TypeInputFile {
	oneof Value {
		PredInputFile InputFile = 1;
		PredInputFileBig InputFileBig = 2;
	}
}
message TypeInputMedia {
	oneof Value {
		PredInputMediaEmpty InputMediaEmpty = 1;
		PredInputMediaUploadedPhoto InputMediaUploadedPhoto = 2;
		PredInputMediaPhoto InputMediaPhoto = 3;
		PredInputMediaGeoPoint InputMediaGeoPoint = 4;
		PredInputMediaContact InputMediaContact = 5;
		PredInputMediaUploadedDocument InputMediaUploadedDocument = 6;
		PredInputMediaDocument InputMediaDocument = 7;
		PredInputMediaVenue InputMediaVenue = 8;
		PredInputMediaGifExternal InputMediaGifExternal = 9;
		PredInputMediaPhotoExternal InputMediaPhotoExternal = 10;
		PredInputMediaDocumentExternal InputMediaDocumentExternal = 11;
		PredInputMediaGame InputMediaGame = 12;
		PredInputMediaInvoice InputMediaInvoice = 13;
	}
}
message TypeInputChatPhoto {
	oneof Value {
		PredInputChatPhotoEmpty InputChatPhotoEmpty = 1;
		PredInputChatUploadedPhoto InputChatUploadedPhoto = 2;
		PredInputChatPhoto InputChatPhoto = 3;
	}
}
message TypeInputGeoPoint {
	oneof Value {
		PredInputGeoPointEmpty InputGeoPointEmpty = 1;
		PredInputGeoPoint InputGeoPoint = 2;
	}
}
message TypeInputPhoto {
	oneof Value {
		PredInputPhotoEmpty InputPhotoEmpty = 1;
		PredInputPhoto InputPhoto = 2;
	}
}
message TypeInputFileLocation {
	oneof Value {
		PredInputFileLocation InputFileLocation = 1;
		PredInputEncryptedFileLocation InputEncryptedFileLocation = 2;
		PredInputDocumentFileLocation InputDocumentFileLocation = 3;
	}
}
message TypeInputAppEvent {
	PredInputAppEvent Value = 1;
}
message TypePeer {
	oneof Value {
		PredPeerUser PeerUser = 1;
		PredPeerChat PeerChat = 2;
		PredPeerChannel PeerChannel = 3;
	}
}
message TypeStorageFileType {
	oneof Value {
		PredStorageFileUnknown StorageFileUnknown = 1;
		PredStorageFileJpeg StorageFileJpeg = 2;
		PredStorageFileGif StorageFileGif = 3;
		PredStorageFilePng StorageFilePng = 4;
		PredStorageFileMp3 StorageFileMp3 = 5;
		PredStorageFileMov StorageFileMov = 6;
		PredStorageFilePartial StorageFilePartial = 7;
		PredStorageFileMp4 StorageFileMp4 = 8;
		PredStorageFileWebp StorageFileWebp = 9;
		PredStorageFilePdf StorageFilePdf = 10;
	}
}
message TypeFileLocation {
	oneof Value {
		PredFileLocationUnavailable FileLocationUnavailable = 1;
		PredFileLocation FileLocation = 2;
	}
}
message TypeUser {
	oneof Value {
		PredUserEmpty UserEmpty = 1;
		PredUser User = 2;
	}
}
message TypeUserProfilePhoto {
	oneof Value {
		PredUserProfilePhotoEmpty UserProfilePhotoEmpty = 1;
		PredUserProfilePhoto UserProfilePhoto = 2;
	}
}
message TypeUserStatus {
	oneof Value {
		PredUserStatusEmpty UserStatusEmpty = 1;
		PredUserStatusOnline UserStatusOnline = 2;
		PredUserStatusOffline UserStatusOffline = 3;
		PredUserStatusRecently UserStatusRecently = 4;
		PredUserStatusLastWeek UserStatusLastWeek = 5;
		PredUserStatusLastMonth UserStatusLastMonth = 6;
	}
}
message TypeChat {
	oneof Value {
		PredChatEmpty ChatEmpty = 1;
		PredChat Chat = 2;
		PredChatForbidden ChatForbidden = 3;
		PredChannel Channel = 4;
		PredChannelForbidden ChannelForbidden = 5;
	}
}
message TypeChatFull {
	oneof Value {
		PredChatFull ChatFull = 1;
		PredChannelFull ChannelFull = 2;
	}
}
message TypeChatParticipant {
	oneof Value {
		PredChatParticipant ChatParticipant = 1;
		PredChatParticipantCreator ChatParticipantCreator = 2;
		PredChatParticipantAdmin ChatParticipantAdmin = 3;
	}
}
message TypeChatParticipants {
	oneof Value {
		PredChatParticipantsForbidden ChatParticipantsForbidden = 1;
		PredChatParticipants ChatParticipants = 2;
	}
}
message TypeChatPhoto {
	oneof Value {
		PredChatPhotoEmpty ChatPhotoEmpty = 1;
		PredChatPhoto ChatPhoto = 2;
	}
}
message TypeMessage {
	oneof Value {
		PredMessageEmpty MessageEmpty = 1;
		PredMessage Message = 2;
		PredMessageService MessageService = 3;
	}
}
message TypeMessageMedia {
	oneof Value {
		PredMessageMediaEmpty MessageMediaEmpty = 1;
		PredMessageMediaPhoto MessageMediaPhoto = 2;
		PredMessageMediaGeo MessageMediaGeo = 3;
		PredMessageMediaContact MessageMediaContact = 4;
		PredMessageMediaUnsupported MessageMediaUnsupported = 5;
		PredMessageMediaDocument MessageMediaDocument = 6;
		PredMessageMediaWebPage MessageMediaWebPage = 7;
		PredMessageMediaVenue MessageMediaVenue = 8;
		PredMessageMediaGame MessageMediaGame = 9;
		PredMessageMediaInvoice MessageMediaInvoice = 10;
	}
}
message TypeMessageAction {
	oneof Value {
		PredMessageActionEmpty MessageActionEmpty = 1;
		PredMessageActionChatCreate MessageActionChatCreate = 2;
		PredMessageActionChatEditTitle MessageActionChatEditTitle = 3;
		PredMessageActionChatEditPhoto MessageActionChatEditPhoto = 4;
		PredMessageActionChatDeletePhoto MessageActionChatDeletePhoto = 5;
		PredMessageActionChatAddUser MessageActionChatAddUser = 6;
		PredMessageActionChatDeleteUser MessageActionChatDeleteUser = 7;
		PredMessageActionChatJoinedByLink MessageActionChatJoinedByLink = 8;
		PredMessageActionChannelCreate MessageActionChannelCreate = 9;
		PredMessageActionChatMigrateTo MessageActionChatMigrateTo = 10;
		PredMessageActionChannelMigrateFrom MessageActionChannelMigrateFrom = 11;
		PredMessageActionPinMessage MessageActionPinMessage = 12;
		PredMessageActionHistoryClear MessageActionHistoryClear = 13;
		PredMessageActionGameScore MessageActionGameScore = 14;
		PredMessageActionPhoneCall MessageActionPhoneCall = 15;
		PredMessageActionPaymentSentMe MessageActionPaymentSentMe = 16;
		PredMessageActionPaymentSent MessageActionPaymentSent = 17;
		PredMessageActionScreenshotTaken MessageActionScreenshotTaken = 18;
	}
}
message TypeDialog {
	PredDialog Value = 1;
}
message TypePhoto {
	oneof Value {
		PredPhotoEmpty PhotoEmpty = 1;
		PredPhoto Photo = 2;
	}
}
message TypePhotoSize {
	oneof Value {
		PredPhotoSizeEmpty PhotoSizeEmpty = 1;
		PredPhotoSize PhotoSize = 2;
		PredPhotoCachedSize PhotoCachedSize = 3;
	}
}
message TypeGeoPoint {
	oneof Value {
		PredGeoPointEmpty GeoPointEmpty = 1;
		PredGeoPoint GeoPoint = 2;
	}
}
message TypeAuthCheckedPhone {
	PredAuthCheckedPhone Value = 1;
}
message TypeAuthSentCode {
	PredAuthSentCode Value = 1;
}
message TypeAuthAuthorization {
	PredAuthAuthorization Value = 1;
}
message TypeAuthExportedAuthorization {
	PredAuthExportedAuthorization Value = 1;
}
message TypeInputNotifyPeer {
	oneof Value {
		PredInputNotifyPeer InputNotifyPeer = 1;
		PredInputNotifyUsers InputNotifyUsers = 2;
		PredInputNotifyChats InputNotifyChats = 3;
		PredInputNotifyAll InputNotifyAll = 4;
	}
}
message TypeInputPeerNotifySettings {
	PredInputPeerNotifySettings Value = 1;
}
message TypePeerNotifyEvents {
	oneof Value {
		PredPeerNotifyEventsEmpty PeerNotifyEventsEmpty = 1;
		PredPeerNotifyEventsAll PeerNotifyEventsAll = 2;
	}
}
message TypePeerNotifySettings {
	oneof Value {
		PredPeerNotifySettingsEmpty PeerNotifySettingsEmpty = 1;
		PredPeerNotifySettings PeerNotifySettings = 2;
	}
}
message TypeWallPaper {
	oneof Value {
		PredWallPaper WallPaper = 1;
		PredWallPaperSolid WallPaperSolid = 2;
	}
}
message TypeUserFull {
	PredUserFull Value = 1;
}
message TypeContact {
	PredContact Value = 1;
}
message TypeImportedContact {
	PredImportedContact Value = 1;
}
message TypeContactBlocked {
	PredContactBlocked Value = 1;
}
message TypeContactStatus {
	PredContactStatus Value = 1;
}
message TypeContactsLink {
	PredContactsLink Value = 1;
}
message TypeContactsContacts {
	oneof Value {
		PredContactsContacts ContactsContacts = 1;
		PredContactsContactsNotModified ContactsContactsNotModified = 2;
	}
}
message TypeContactsImportedContacts {
	PredContactsImportedContacts Value = 1;
}
message TypeContactsBlocked {
	oneof Value {
		PredContactsBlocked ContactsBlocked = 1;
		PredContactsBlockedSlice ContactsBlockedSlice = 2;
	}
}
message TypeContactsFound {
	PredContactsFound Value = 1;
}
message TypeMessagesDialogs {
	oneof Value {
		PredMessagesDialogs MessagesDialogs = 1;
		PredMessagesDialogsSlice MessagesDialogsSlice = 2;
	}
}
message TypeMessagesMessages {
	oneof Value {
		PredMessagesMessages MessagesMessages = 1;
		PredMessagesMessagesSlice MessagesMessagesSlice = 2;
		PredMessagesChannelMessages MessagesChannelMessages = 3;
	}
}
message TypeMessagesChats {
	oneof Value {
		PredMessagesChats MessagesChats = 1;
		PredMessagesChatsSlice MessagesChatsSlice = 2;
	}
}
message TypeMessagesChatFull {
	PredMessagesChatFull Value = 1;
}
message TypeMessagesAffectedHistory {
	PredMessagesAffectedHistory Value = 1;
}
message TypeMessagesFilter {
	oneof Value {
		PredInputMessagesFilterEmpty InputMessagesFilterEmpty = 1;
		PredInputMessagesFilterPhotos InputMessagesFilterPhotos = 2;
		PredInputMessagesFilterVideo InputMessagesFilterVideo = 3;
		PredInputMessagesFilterPhotoVideo InputMessagesFilterPhotoVideo = 4;
		PredInputMessagesFilterDocument InputMessagesFilterDocument = 5;
		PredInputMessagesFilterPhotoVideoDocuments InputMessagesFilterPhotoVideoDocuments = 6;
		PredInputMessagesFilterUrl InputMessagesFilterUrl = 7;
		PredInputMessagesFilterGif InputMessagesFilterGif = 8;
		PredInputMessagesFilterVoice InputMessagesFilterVoice = 9;
		PredInputMessagesFilterMusic InputMessagesFilterMusic = 10;
		PredInputMessagesFilterChatPhotos InputMessagesFilterChatPhotos = 11;
		PredInputMessagesFilterPhoneCalls InputMessagesFilterPhoneCalls = 12;
		PredInputMessagesFilterRoundVoice InputMessagesFilterRoundVoice = 13;
		PredInputMessagesFilterRoundVideo InputMessagesFilterRoundVideo = 14;
		PredInputMessagesFilterMyMentions InputMessagesFilterMyMentions = 15;
		PredInputMessagesFilterMyMentionsUnread InputMessagesFilterMyMentionsUnread = 16;
	}
}
message TypeUpdate {
	oneof Value {
		PredUpdateNewMessage UpdateNewMessage = 1;
		PredUpdateMessageID UpdateMessageID = 2;
		PredUpdateDeleteMessages UpdateDeleteMessages = 3;
		PredUpdateUserTyping UpdateUserTyping = 4;
		PredUpdateChatUserTyping UpdateChatUserTyping = 5;
		PredUpdateChatParticipants UpdateChatParticipants = 6;
		PredUpdateUserStatus UpdateUserStatus = 7;
		PredUpdateUserName UpdateUserName = 8;
		PredUpdateUserPhoto UpdateUserPhoto = 9;
		PredUpdateContactRegistered UpdateContactRegistered = 10;
		PredUpdateContactLink UpdateContactLink = 11;
		PredUpdateNewEncryptedMessage UpdateNewEncryptedMessage = 12;
		PredUpdateEncryptedChatTyping UpdateEncryptedChatTyping = 13;
		PredUpdateEncryption UpdateEncryption = 14;
		PredUpdateEncryptedMessagesRead UpdateEncryptedMessagesRead = 15;
		PredUpdateChatParticipantAdd UpdateChatParticipantAdd = 16;
		PredUpdateChatParticipantDelete UpdateChatParticipantDelete = 17;
		PredUpdateDcOptions UpdateDcOptions = 18;
		PredUpdateUserBlocked UpdateUserBlocked = 19;
		PredUpdateNotifySettings UpdateNotifySettings = 20;
		PredUpdateServiceNotification UpdateServiceNotification = 21;
		PredUpdatePrivacy UpdatePrivacy = 22;
		PredUpdateUserPhone UpdateUserPhone = 23;
		PredUpdateReadHistoryInbox UpdateReadHistoryInbox = 24;
		PredUpdateReadHistoryOutbox UpdateReadHistoryOutbox = 25;
		PredUpdateWebPage UpdateWebPage = 26;
		PredUpdateReadMessagesContents UpdateReadMessagesContents = 27;
		PredUpdateChannelTooLong UpdateChannelTooLong = 28;
		PredUpdateChannel UpdateChannel = 29;
		PredUpdateNewChannelMessage UpdateNewChannelMessage = 30;
		PredUpdateReadChannelInbox UpdateReadChannelInbox = 31;
		PredUpdateDeleteChannelMessages UpdateDeleteChannelMessages = 32;
		PredUpdateChannelMessageViews UpdateChannelMessageViews = 33;
		PredUpdateChatAdmins UpdateChatAdmins = 34;
		PredUpdateChatParticipantAdmin UpdateChatParticipantAdmin = 35;
		PredUpdateNewStickerSet UpdateNewStickerSet = 36;
		PredUpdateStickerSetsOrder UpdateStickerSetsOrder = 37;
		PredUpdateStickerSets UpdateStickerSets = 38;
		PredUpdateSavedGifs UpdateSavedGifs = 39;
		PredUpdateBotInlineQuery UpdateBotInlineQuery = 40;
		PredUpdateBotInlineSend UpdateBotInlineSend = 41;
		PredUpdateEditChannelMessage UpdateEditChannelMessage = 42;
		PredUpdateChannelPinnedMessage UpdateChannelPinnedMessage = 43;
		PredUpdateBotCallbackQuery UpdateBotCallbackQuery = 44;
		PredUpdateEditMessage UpdateEditMessage = 45;
		PredUpdateInlineBotCallbackQuery UpdateInlineBotCallbackQuery = 46;
		PredUpdateReadChannelOutbox UpdateReadChannelOutbox = 47;
		PredUpdateDraftMessage UpdateDraftMessage = 48;
		PredUpdateReadFeaturedStickers UpdateReadFeaturedStickers = 49;
		PredUpdateRecentStickers UpdateRecentStickers = 50;
		PredUpdateConfig UpdateConfig = 51;
		PredUpdatePtsChanged UpdatePtsChanged = 52;
		PredUpdateChannelWebPage UpdateChannelWebPage = 53;
		PredUpdatePhoneCall UpdatePhoneCall = 54;
		PredUpdateDialogPinned UpdateDialogPinned = 55;
		PredUpdatePinnedDialogs UpdatePinnedDialogs = 56;
		PredUpdateBotWebhookJSON UpdateBotWebhookJSON = 57;
		PredUpdateBotWebhookJSONQuery UpdateBotWebhookJSONQuery = 58;
		PredUpdateBotShippingQuery UpdateBotShippingQuery = 59;
		PredUpdateBotPrecheckoutQuery UpdateBotPrecheckoutQuery = 60;
		PredUpdateLangPackTooLong UpdateLangPackTooLong = 61;
		PredUpdateLangPack UpdateLangPack = 62;
		PredUpdateContactsReset UpdateContactsReset = 63;
		PredUpdateFavedStickers UpdateFavedStickers = 64;
		PredUpdateChannelReadMessagesContents UpdateChannelReadMessagesContents = 65;
	}
}
message TypeUpdatesState {
	PredUpdatesState Value = 1;
}
message TypeUpdatesDifference {
	oneof Value {
		PredUpdatesDifferenceEmpty UpdatesDifferenceEmpty = 1;
		PredUpdatesDifference UpdatesDifference = 2;
		PredUpdatesDifferenceSlice UpdatesDifferenceSlice = 3;
		PredUpdatesDifferenceTooLong UpdatesDifferenceTooLong = 4;
	}
}
message TypeUpdates {
	oneof Value {
		PredUpdatesTooLong UpdatesTooLong = 1;
		PredUpdateShortMessage UpdateShortMessage = 2;
		PredUpdateShortChatMessage UpdateShortChatMessage = 3;
		PredUpdateShort UpdateShort = 4;
		PredUpdatesCombined UpdatesCombined = 5;
		PredUpdates Updates = 6;
		PredUpdateShortSentMessage UpdateShortSentMessage = 7;
	}
}
message TypePhotosPhoto {
	PredPhotosPhoto Value = 1;
}
message TypeUploadFile {
	oneof Value {
		PredUploadFile UploadFile = 1;
		PredUploadFileCdnRedirect UploadFileCdnRedirect = 2;
	}
}
message TypeDcOption {
	PredDcOption Value = 1;
}
message TypeConfig {
	PredConfig Value = 1;
}
message TypeNearestDc {
	PredNearestDc Value = 1;
}
message TypeHelpAppUpdate {
	oneof Value {
		PredHelpAppUpdate HelpAppUpdate = 1;
		PredHelpNoAppUpdate HelpNoAppUpdate = 2;
	}
}
message TypeHelpInviteText {
	PredHelpInviteText Value = 1;
}
message TypeInputPeerNotifyEvents {
	oneof Value {
		PredInputPeerNotifyEventsEmpty InputPeerNotifyEventsEmpty = 1;
		PredInputPeerNotifyEventsAll InputPeerNotifyEventsAll = 2;
	}
}
message TypePhotosPhotos {
	oneof Value {
		PredPhotosPhotos PhotosPhotos = 1;
		PredPhotosPhotosSlice PhotosPhotosSlice = 2;
	}
}
message TypeEncryptedChat {
	oneof Value {
		PredEncryptedChatEmpty EncryptedChatEmpty = 1;
		PredEncryptedChatWaiting EncryptedChatWaiting = 2;
		PredEncryptedChatRequested EncryptedChatRequested = 3;
		PredEncryptedChat EncryptedChat = 4;
		PredEncryptedChatDiscarded EncryptedChatDiscarded = 5;
	}
}
message TypeInputEncryptedChat {
	PredInputEncryptedChat Value = 1;
}
message TypeEncryptedFile {
	oneof Value {
		PredEncryptedFileEmpty EncryptedFileEmpty = 1;
		PredEncryptedFile EncryptedFile = 2;
	}
}
message TypeInputEncryptedFile {
	oneof Value {
		PredInputEncryptedFileEmpty InputEncryptedFileEmpty = 1;
		PredInputEncryptedFileUploaded InputEncryptedFileUploaded = 2;
		PredInputEncryptedFile InputEncryptedFile = 3;
		PredInputEncryptedFileBigUploaded InputEncryptedFileBigUploaded = 4;
	}
}
message TypeEncryptedMessage {
	oneof Value {
		PredEncryptedMessage EncryptedMessage = 1;
		PredEncryptedMessageService EncryptedMessageService = 2;
	}
}
message TypeMessagesDhConfig {
	oneof Value {
		PredMessagesDhConfigNotModified MessagesDhConfigNotModified = 1;
		PredMessagesDhConfig MessagesDhConfig = 2;
	}
}
message TypeMessagesSentEncryptedMessage {
	oneof Value {
		PredMessagesSentEncryptedMessage MessagesSentEncryptedMessage = 1;
		PredMessagesSentEncryptedFile MessagesSentEncryptedFile = 2;
	}
}
message TypeInputDocument {
	oneof Value {
		PredInputDocumentEmpty InputDocumentEmpty = 1;
		PredInputDocument InputDocument = 2;
	}
}
message TypeDocument {
	oneof Value {
		PredDocumentEmpty DocumentEmpty = 1;
		PredDocument Document = 2;
	}
}
message TypeHelpSupport {
	PredHelpSupport Value = 1;
}
message TypeNotifyPeer {
	oneof Value {
		PredNotifyAll NotifyAll = 1;
		PredNotifyChats NotifyChats = 2;
		PredNotifyPeer NotifyPeer = 3;
		PredNotifyUsers NotifyUsers = 4;
	}
}
message TypeSendMessageAction {
	oneof Value {
		PredSendMessageTypingAction SendMessageTypingAction = 1;
		PredSendMessageCancelAction SendMessageCancelAction = 2;
		PredSendMessageRecordVideoAction SendMessageRecordVideoAction = 3;
		PredSendMessageUploadVideoAction SendMessageUploadVideoAction = 4;
		PredSendMessageRecordAudioAction SendMessageRecordAudioAction = 5;
		PredSendMessageUploadAudioAction SendMessageUploadAudioAction = 6;
		PredSendMessageUploadPhotoAction SendMessageUploadPhotoAction = 7;
		PredSendMessageUploadDocumentAction SendMessageUploadDocumentAction = 8;
		PredSendMessageGeoLocationAction SendMessageGeoLocationAction = 9;
		PredSendMessageChooseContactAction SendMessageChooseContactAction = 10;
		PredSendMessageGamePlayAction SendMessageGamePlayAction = 11;
		PredSendMessageRecordRoundAction SendMessageRecordRoundAction = 12;
		PredSendMessageUploadRoundAction SendMessageUploadRoundAction = 13;
	}
}
message TypeInputPrivacyKey {
	oneof Value {
		PredInputPrivacyKeyStatusTimestamp InputPrivacyKeyStatusTimestamp = 1;
		PredInputPrivacyKeyChatInvite InputPrivacyKeyChatInvite = 2;
		PredInputPrivacyKeyPhoneCall InputPrivacyKeyPhoneCall = 3;
	}
}
message TypePrivacyKey {
	oneof Value {
		PredPrivacyKeyStatusTimestamp PrivacyKeyStatusTimestamp = 1;
		PredPrivacyKeyChatInvite PrivacyKeyChatInvite = 2;
		PredPrivacyKeyPhoneCall PrivacyKeyPhoneCall = 3;
	}
}
message TypeInputPrivacyRule {
	oneof Value {
		PredInputPrivacyValueAllowContacts InputPrivacyValueAllowContacts = 1;
		PredInputPrivacyValueAllowAll InputPrivacyValueAllowAll = 2;
		PredInputPrivacyValueAllowUsers InputPrivacyValueAllowUsers = 3;
		PredInputPrivacyValueDisallowContacts InputPrivacyValueDisallowContacts = 4;
		PredInputPrivacyValueDisallowAll InputPrivacyValueDisallowAll = 5;
		PredInputPrivacyValueDisallowUsers InputPrivacyValueDisallowUsers = 6;
	}
}
message TypePrivacyRule {
	oneof Value {
		PredPrivacyValueAllowContacts PrivacyValueAllowContacts = 1;
		PredPrivacyValueAllowAll PrivacyValueAllowAll = 2;
		PredPrivacyValueAllowUsers PrivacyValueAllowUsers = 3;
		PredPrivacyValueDisallowContacts PrivacyValueDisallowContacts = 4;
		PredPrivacyValueDisallowAll PrivacyValueDisallowAll = 5;
		PredPrivacyValueDisallowUsers PrivacyValueDisallowUsers = 6;
	}
}
message TypeAccountPrivacyRules {
	PredAccountPrivacyRules Value = 1;
}
message TypeAccountDaysTTL {
	PredAccountDaysTTL Value = 1;
}
message TypeDisabledFeature {
	PredDisabledFeature Value = 1;
}
message TypeDocumentAttribute {
	oneof Value {
		PredDocumentAttributeImageSize DocumentAttributeImageSize = 1;
		PredDocumentAttributeAnimated DocumentAttributeAnimated = 2;
		PredDocumentAttributeSticker DocumentAttributeSticker = 3;
		PredDocumentAttributeVideo DocumentAttributeVideo = 4;
		PredDocumentAttributeAudio DocumentAttributeAudio = 5;
		PredDocumentAttributeFilename DocumentAttributeFilename = 6;
		PredDocumentAttributeHasStickers DocumentAttributeHasStickers = 7;
	}
}
message TypeMessagesStickers {
	oneof Value {
		PredMessagesStickersNotModified MessagesStickersNotModified = 1;
		PredMessagesStickers MessagesStickers = 2;
	}
}
message TypeStickerPack {
	PredStickerPack Value = 1;
}
message TypeMessagesAllStickers {
	oneof Value {
		PredMessagesAllStickersNotModified MessagesAllStickersNotModified = 1;
		PredMessagesAllStickers MessagesAllStickers = 2;
	}
}
message TypeAccountPassword {
	oneof Value {
		PredAccountNoPassword AccountNoPassword = 1;
		PredAccountPassword AccountPassword = 2;
	}
}
message TypeMessagesAffectedMessages {
	PredMessagesAffectedMessages Value = 1;
}
message TypeContactLink {
	oneof Value {
		PredContactLinkUnknown ContactLinkUnknown = 1;
		PredContactLinkNone ContactLinkNone = 2;
		PredContactLinkHasPhone ContactLinkHasPhone = 3;
		PredContactLinkContact ContactLinkContact = 4;
	}
}
message TypeWebPage {
	oneof Value {
		PredWebPageEmpty WebPageEmpty = 1;
		PredWebPagePending WebPagePending = 2;
		PredWebPage WebPage = 3;
		PredWebPageNotModified WebPageNotModified = 4;
	}
}
message TypeAuthorization {
	PredAuthorization Value = 1;
}
message TypeAccountAuthorizations {
	PredAccountAuthorizations Value = 1;
}
message TypeAccountPasswordSettings {
	PredAccountPasswordSettings Value = 1;
}
message TypeAccountPasswordInputSettings {
	PredAccountPasswordInputSettings Value = 1;
}
message TypeAuthPasswordRecovery {
	PredAuthPasswordRecovery Value = 1;
}
message TypeReceivedNotifyMessage {
	PredReceivedNotifyMessage Value = 1;
}
message TypeExportedChatInvite {
	oneof Value {
		PredChatInviteEmpty ChatInviteEmpty = 1;
		PredChatInviteExported ChatInviteExported = 2;
	}
}
message TypeChatInvite {
	oneof Value {
		PredChatInviteAlready ChatInviteAlready = 1;
		PredChatInvite ChatInvite = 2;
	}
}
message TypeInputStickerSet {
	oneof Value {
		PredInputStickerSetEmpty InputStickerSetEmpty = 1;
		PredInputStickerSetID InputStickerSetID = 2;
		PredInputStickerSetShortName InputStickerSetShortName = 3;
	}
}
message TypeStickerSet {
	PredStickerSet Value = 1;
}
message TypeMessagesStickerSet {
	PredMessagesStickerSet Value = 1;
}
message TypeBotCommand {
	PredBotCommand Value = 1;
}
message TypeBotInfo {
	PredBotInfo Value = 1;
}
message TypeKeyboardButton {
	oneof Value {
		PredKeyboardButton KeyboardButton = 1;
		PredKeyboardButtonUrl KeyboardButtonUrl = 2;
		PredKeyboardButtonCallback KeyboardButtonCallback = 3;
		PredKeyboardButtonRequestPhone KeyboardButtonRequestPhone = 4;
		PredKeyboardButtonRequestGeoLocation KeyboardButtonRequestGeoLocation = 5;
		PredKeyboardButtonSwitchInline KeyboardButtonSwitchInline = 6;
		PredKeyboardButtonGame KeyboardButtonGame = 7;
		PredKeyboardButtonBuy KeyboardButtonBuy = 8;
	}
}
message TypeKeyboardButtonRow {
	PredKeyboardButtonRow Value = 1;
}
message TypeReplyMarkup {
	oneof Value {
		PredReplyKeyboardHide ReplyKeyboardHide = 1;
		PredReplyKeyboardForceReply ReplyKeyboardForceReply = 2;
		PredReplyKeyboardMarkup ReplyKeyboardMarkup = 3;
		PredReplyInlineMarkup ReplyInlineMarkup = 4;
	}
}
message TypeMessageEntity {
	oneof Value {
		PredMessageEntityUnknown MessageEntityUnknown = 1;
		PredMessageEntityMention MessageEntityMention = 2;
		PredMessageEntityHashtag MessageEntityHashtag = 3;
		PredMessageEntityBotCommand MessageEntityBotCommand = 4;
		PredMessageEntityUrl MessageEntityUrl = 5;
		PredMessageEntityEmail MessageEntityEmail = 6;
		PredMessageEntityBold MessageEntityBold = 7;
		PredMessageEntityItalic MessageEntityItalic = 8;
		PredMessageEntityCode MessageEntityCode = 9;
		PredMessageEntityPre MessageEntityPre = 10;
		PredMessageEntityTextUrl MessageEntityTextUrl = 11;
		PredMessageEntityMentionName MessageEntityMentionName = 12;
		PredInputMessageEntityMentionName InputMessageEntityMentionName = 13;
	}
}
message TypeInputChannel {
	oneof Value {
		PredInputChannelEmpty InputChannelEmpty = 1;
		PredInputChannel InputChannel = 2;
	}
}
message TypeContactsResolvedPeer {
	PredContactsResolvedPeer Value = 1;
}
message TypeMessageRange {
	PredMessageRange Value = 1;
}
message TypeUpdatesChannelDifference {
	oneof Value {
		PredUpdatesChannelDifferenceEmpty UpdatesChannelDifferenceEmpty = 1;
		PredUpdatesChannelDifferenceTooLong UpdatesChannelDifferenceTooLong = 2;
		PredUpdatesChannelDifference UpdatesChannelDifference = 3;
	}
}
message TypeChannelMessagesFilter {
	oneof Value {
		PredChannelMessagesFilterEmpty ChannelMessagesFilterEmpty = 1;
		PredChannelMessagesFilter ChannelMessagesFilter = 2;
	}
}
message TypeChannelParticipant {
	oneof Value {
		PredChannelParticipant ChannelParticipant = 1;
		PredChannelParticipantSelf ChannelParticipantSelf = 2;
		PredChannelParticipantCreator ChannelParticipantCreator = 3;
		PredChannelParticipantAdmin ChannelParticipantAdmin = 4;
		PredChannelParticipantBanned ChannelParticipantBanned = 5;
	}
}
message TypeChannelParticipantsFilter {
	oneof Value {
		PredChannelParticipantsRecent ChannelParticipantsRecent = 1;
		PredChannelParticipantsAdmins ChannelParticipantsAdmins = 2;
		PredChannelParticipantsKicked ChannelParticipantsKicked = 3;
		PredChannelParticipantsBots ChannelParticipantsBots = 4;
		PredChannelParticipantsBanned ChannelParticipantsBanned = 5;
		PredChannelParticipantsSearch ChannelParticipantsSearch = 6;
	}
}
message TypeChannelsChannelParticipants {
	PredChannelsChannelParticipants Value = 1;
}
message TypeChannelsChannelParticipant {
	PredChannelsChannelParticipant Value = 1;
}
message TypeTrue {
	PredTrue Value = 1;
}
message TypeReportReason {
	oneof Value {
		PredInputReportReasonSpam InputReportReasonSpam = 1;
		PredInputReportReasonViolence InputReportReasonViolence = 2;
		PredInputReportReasonPornography InputReportReasonPornography = 3;
		PredInputReportReasonOther InputReportReasonOther = 4;
	}
}
message TypeHelpTermsOfService {
	PredHelpTermsOfService Value = 1;
}
message TypeFoundGif {
	oneof Value {
		PredFoundGif FoundGif = 1;
		PredFoundGifCached FoundGifCached = 2;
	}
}
message TypeMessagesFoundGifs {
	PredMessagesFoundGifs Value = 1;
}
message TypeMessagesSavedGifs {
	oneof Value {
		PredMessagesSavedGifsNotModified MessagesSavedGifsNotModified = 1;
		PredMessagesSavedGifs MessagesSavedGifs = 2;
	}
}
message TypeInputBotInlineMessage {
	oneof Value {
		PredInputBotInlineMessageMediaAuto InputBotInlineMessageMediaAuto = 1;
		PredInputBotInlineMessageText InputBotInlineMessageText = 2;
		PredInputBotInlineMessageMediaGeo InputBotInlineMessageMediaGeo = 3;
		PredInputBotInlineMessageMediaVenue InputBotInlineMessageMediaVenue = 4;
		PredInputBotInlineMessageMediaContact InputBotInlineMessageMediaContact = 5;
		PredInputBotInlineMessageGame InputBotInlineMessageGame = 6;
	}
}
message TypeInputBotInlineResult {
	oneof Value {
		PredInputBotInlineResult InputBotInlineResult = 1;
		PredInputBotInlineResultPhoto InputBotInlineResultPhoto = 2;
		PredInputBotInlineResultDocument InputBotInlineResultDocument = 3;
		PredInputBotInlineResultGame InputBotInlineResultGame = 4;
	}
}
message TypeBotInlineMessage {
	oneof Value {
		PredBotInlineMessageMediaAuto BotInlineMessageMediaAuto = 1;
		PredBotInlineMessageText BotInlineMessageText = 2;
		PredBotInlineMessageMediaGeo BotInlineMessageMediaGeo = 3;
		PredBotInlineMessageMediaVenue BotInlineMessageMediaVenue = 4;
		PredBotInlineMessageMediaContact BotInlineMessageMediaContact = 5;
	}
}
message TypeBotInlineResult {
	oneof Value {
		PredBotInlineResult BotInlineResult = 1;
		PredBotInlineMediaResult BotInlineMediaResult = 2;
	}
}
message TypeMessagesBotResults {
	PredMessagesBotResults Value = 1;
}
message TypeExportedMessageLink {
	PredExportedMessageLink Value = 1;
}
message TypeMessageFwdHeader {
	PredMessageFwdHeader Value = 1;
}
message TypePeerSettings {
	PredPeerSettings Value = 1;
}
message TypeAuthCodeType {
	oneof Value {
		PredAuthCodeTypeSms AuthCodeTypeSms = 1;
		PredAuthCodeTypeCall AuthCodeTypeCall = 2;
		PredAuthCodeTypeFlashCall AuthCodeTypeFlashCall = 3;
	}
}
message TypeAuthSentCodeType {
	oneof Value {
		PredAuthSentCodeTypeApp AuthSentCodeTypeApp = 1;
		PredAuthSentCodeTypeSms AuthSentCodeTypeSms = 2;
		PredAuthSentCodeTypeCall AuthSentCodeTypeCall = 3;
		PredAuthSentCodeTypeFlashCall AuthSentCodeTypeFlashCall = 4;
	}
}
message TypeMessagesBotCallbackAnswer {
	PredMessagesBotCallbackAnswer Value = 1;
}
message TypeMessagesMessageEditData {
	PredMessagesMessageEditData Value = 1;
}
message TypeInputBotInlineMessageID {
	PredInputBotInlineMessageID Value = 1;
}
message TypeInlineBotSwitchPM {
	PredInlineBotSwitchPM Value = 1;
}
message TypeMessagesPeerDialogs {
	PredMessagesPeerDialogs Value = 1;
}
message TypeTopPeer {
	PredTopPeer Value = 1;
}
message TypeTopPeerCategory {
	oneof Value {
		PredTopPeerCategoryBotsPM TopPeerCategoryBotsPM = 1;
		PredTopPeerCategoryBotsInline TopPeerCategoryBotsInline = 2;
		PredTopPeerCategoryCorrespondents TopPeerCategoryCorrespondents = 3;
		PredTopPeerCategoryGroups TopPeerCategoryGroups = 4;
		PredTopPeerCategoryChannels TopPeerCategoryChannels = 5;
		PredTopPeerCategoryPhoneCalls TopPeerCategoryPhoneCalls = 6;
	}
}
message TypeTopPeerCategoryPeers {
	PredTopPeerCategoryPeers Value = 1;
}
message TypeContactsTopPeers {
	oneof Value {
		PredContactsTopPeersNotModified ContactsTopPeersNotModified = 1;
		PredContactsTopPeers ContactsTopPeers = 2;
	}
}
message TypeDraftMessage {
	oneof Value {
		PredDraftMessageEmpty DraftMessageEmpty = 1;
		PredDraftMessage DraftMessage = 2;
	}
}
message TypeMessagesFeaturedStickers {
	oneof Value {
		PredMessagesFeaturedStickersNotModified MessagesFeaturedStickersNotModified = 1;
		PredMessagesFeaturedStickers MessagesFeaturedStickers = 2;
	}
}
message TypeMessagesRecentStickers {
	oneof Value {
		PredMessagesRecentStickersNotModified MessagesRecentStickersNotModified = 1;
		PredMessagesRecentStickers MessagesRecentStickers = 2;
	}
}
message TypeMessagesArchivedStickers {
	PredMessagesArchivedStickers Value = 1;
}
message TypeMessagesStickerSetInstallResult {
	oneof Value {
		PredMessagesStickerSetInstallResultSuccess MessagesStickerSetInstallResultSuccess = 1;
		PredMessagesStickerSetInstallResultArchive MessagesStickerSetInstallResultArchive = 2;
	}
}
message TypeStickerSetCovered {
	oneof Value {
		PredStickerSetCovered StickerSetCovered = 1;
		PredStickerSetMultiCovered StickerSetMultiCovered = 2;
	}
}
message TypeMaskCoords {
	PredMaskCoords Value = 1;
}
message TypeInputStickeredMedia {
	oneof Value {
		PredInputStickeredMediaPhoto InputStickeredMediaPhoto = 1;
		PredInputStickeredMediaDocument InputStickeredMediaDocument = 2;
	}
}
message TypeGame {
	PredGame Value = 1;
}
message TypeInputGame {
	oneof Value {
		PredInputGameID InputGameID = 1;
		PredInputGameShortName InputGameShortName = 2;
	}
}
message TypeHighScore {
	PredHighScore Value = 1;
}
message TypeMessagesHighScores {
	PredMessagesHighScores Value = 1;
}
message TypeRichText {
	oneof Value {
		PredTextEmpty TextEmpty = 1;
		PredTextPlain TextPlain = 2;
		PredTextBold TextBold = 3;
		PredTextItalic TextItalic = 4;
		PredTextUnderline TextUnderline = 5;
		PredTextStrike TextStrike = 6;
		PredTextFixed TextFixed = 7;
		PredTextUrl TextUrl = 8;
		PredTextEmail TextEmail = 9;
		PredTextConcat TextConcat = 10;
	}
}
message TypePageBlock {
	oneof Value {
		PredPageBlockTitle PageBlockTitle = 1;
		PredPageBlockSubtitle PageBlockSubtitle = 2;
		PredPageBlockAuthorDate PageBlockAuthorDate = 3;
		PredPageBlockHeader PageBlockHeader = 4;
		PredPageBlockSubheader PageBlockSubheader = 5;
		PredPageBlockParagraph PageBlockParagraph = 6;
		PredPageBlockPreformatted PageBlockPreformatted = 7;
		PredPageBlockFooter PageBlockFooter = 8;
		PredPageBlockDivider PageBlockDivider = 9;
		PredPageBlockList PageBlockList = 10;
		PredPageBlockBlockquote PageBlockBlockquote = 11;
		PredPageBlockPullquote PageBlockPullquote = 12;
		PredPageBlockPhoto PageBlockPhoto = 13;
		PredPageBlockVideo PageBlockVideo = 14;
		PredPageBlockCover PageBlockCover = 15;
		PredPageBlockEmbed PageBlockEmbed = 16;
		PredPageBlockEmbedPost PageBlockEmbedPost = 17;
		PredPageBlockSlideshow PageBlockSlideshow = 18;
		PredPageBlockUnsupported PageBlockUnsupported = 19;
		PredPageBlockAnchor PageBlockAnchor = 20;
		PredPageBlockCollage PageBlockCollage = 21;
		PredPageBlockChannel PageBlockChannel = 22;
		PredPageBlockAudio PageBlockAudio = 23;
	}
}
message TypePage {
	oneof Value {
		PredPagePart PagePart = 1;
		PredPageFull PageFull = 2;
	}
}
message TypeInputPhoneCall {
	PredInputPhoneCall Value = 1;
}
message TypePhoneCall {
	oneof Value {
		PredPhoneCallEmpty PhoneCallEmpty = 1;
		PredPhoneCallWaiting PhoneCallWaiting = 2;
		PredPhoneCallRequested PhoneCallRequested = 3;
		PredPhoneCall PhoneCall = 4;
		PredPhoneCallDiscarded PhoneCallDiscarded = 5;
		PredPhoneCallAccepted PhoneCallAccepted = 6;
	}
}
message TypePhoneConnection {
	PredPhoneConnection Value = 1;
}
message TypePhoneCallProtocol {
	PredPhoneCallProtocol Value = 1;
}
message TypePhonePhoneCall {
	PredPhonePhoneCall Value = 1;
}
message TypePhoneCallDiscardReason {
	oneof Value {
		PredPhoneCallDiscardReasonMissed PhoneCallDiscardReasonMissed = 1;
		PredPhoneCallDiscardReasonDisconnect PhoneCallDiscardReasonDisconnect = 2;
		PredPhoneCallDiscardReasonHangup PhoneCallDiscardReasonHangup = 3;
		PredPhoneCallDiscardReasonBusy PhoneCallDiscardReasonBusy = 4;
	}
}
message TypeInvoice {
	PredInvoice Value = 1;
}
message TypePaymentsPaymentForm {
	PredPaymentsPaymentForm Value = 1;
}
message TypePostAddress {
	PredPostAddress Value = 1;
}
message TypePaymentRequestedInfo {
	PredPaymentRequestedInfo Value = 1;
}
message TypeDataJSON {
	PredDataJSON Value = 1;
}
message TypeLabeledPrice {
	PredLabeledPrice Value = 1;
}
message TypePaymentCharge {
	PredPaymentCharge Value = 1;
}
message TypePaymentSavedCredentials {
	PredPaymentSavedCredentialsCard Value = 1;
}
message TypeWebDocument {
	PredWebDocument Value = 1;
}
message TypeInputWebDocument {
	PredInputWebDocument Value = 1;
}
message TypeInputWebFileLocation {
	PredInputWebFileLocation Value = 1;
}
message TypeUploadWebFile {
	PredUploadWebFile Value = 1;
}
message TypePaymentsValidatedRequestedInfo {
	PredPaymentsValidatedRequestedInfo Value = 1;
}
message TypePaymentsPaymentResult {
	oneof Value {
		PredPaymentsPaymentResult PaymentsPaymentResult = 1;
		PredPaymentsPaymentVerficationNeeded PaymentsPaymentVerficationNeeded = 2;
	}
}
message TypePaymentsPaymentReceipt {
	PredPaymentsPaymentReceipt Value = 1;
}
message TypePaymentsSavedInfo {
	PredPaymentsSavedInfo Value = 1;
}
message TypeInputPaymentCredentials {
	oneof Value {
		PredInputPaymentCredentialsSaved InputPaymentCredentialsSaved = 1;
		PredInputPaymentCredentials InputPaymentCredentials = 2;
	}
}
message TypeAccountTmpPassword {
	PredAccountTmpPassword Value = 1;
}
message TypeShippingOption {
	PredShippingOption Value = 1;
}
message TypeUploadCdnFile {
	oneof Value {
		PredUploadCdnFileReuploadNeeded UploadCdnFileReuploadNeeded = 1;
		PredUploadCdnFile UploadCdnFile = 2;
	}
}
message TypeCdnPublicKey {
	PredCdnPublicKey Value = 1;
}
message TypeCdnConfig {
	PredCdnConfig Value = 1;
}
message TypeInputStickerSetItem {
	PredInputStickerSetItem Value = 1;
}
message TypeLangPackString {
	oneof Value {
		PredLangPackString LangPackString = 1;
		PredLangPackStringPluralized LangPackStringPluralized = 2;
		PredLangPackStringDeleted LangPackStringDeleted = 3;
	}
}
message TypeLangPackDifference {
	PredLangPackDifference Value = 1;
}
message TypeLangPackLanguage {
	PredLangPackLanguage Value = 1;
}
message TypeChannelAdminRights {
	PredChannelAdminRights Value = 1;
}
message TypeChannelBannedRights {
	PredChannelBannedRights Value = 1;
}
message TypeChannelAdminLogEventAction {
	oneof Value {
		PredChannelAdminLogEventActionChangeTitle ChannelAdminLogEventActionChangeTitle = 1;
		PredChannelAdminLogEventActionChangeAbout ChannelAdminLogEventActionChangeAbout = 2;
		PredChannelAdminLogEventActionChangeUsername ChannelAdminLogEventActionChangeUsername = 3;
		PredChannelAdminLogEventActionChangePhoto ChannelAdminLogEventActionChangePhoto = 4;
		PredChannelAdminLogEventActionToggleInvites ChannelAdminLogEventActionToggleInvites = 5;
		PredChannelAdminLogEventActionToggleSignatures ChannelAdminLogEventActionToggleSignatures = 6;
		PredChannelAdminLogEventActionUpdatePinned ChannelAdminLogEventActionUpdatePinned = 7;
		PredChannelAdminLogEventActionEditMessage ChannelAdminLogEventActionEditMessage = 8;
		PredChannelAdminLogEventActionDeleteMessage ChannelAdminLogEventActionDeleteMessage = 9;
		PredChannelAdminLogEventActionParticipantJoin ChannelAdminLogEventActionParticipantJoin = 10;
		PredChannelAdminLogEventActionParticipantLeave ChannelAdminLogEventActionParticipantLeave = 11;
		PredChannelAdminLogEventActionParticipantInvite ChannelAdminLogEventActionParticipantInvite = 12;
		PredChannelAdminLogEventActionParticipantToggleBan ChannelAdminLogEventActionParticipantToggleBan = 13;
		PredChannelAdminLogEventActionParticipantToggleAdmin ChannelAdminLogEventActionParticipantToggleAdmin = 14;
		PredChannelAdminLogEventActionChangeStickerSet ChannelAdminLogEventActionChangeStickerSet = 15;
	}
}
message TypeChannelAdminLogEvent {
	PredChannelAdminLogEvent Value = 1;
}
message TypeChannelsAdminLogResults {
	PredChannelsAdminLogResults Value = 1;
}
message TypeChannelAdminLogEventsFilter {
	PredChannelAdminLogEventsFilter Value = 1;
}
message TypePopularContact {
	PredPopularContact Value = 1;
}
message TypeCdnFileHash {
	PredCdnFileHash Value = 1;
}
message TypeMessagesFavedStickers {
	oneof Value {
		PredMessagesFavedStickers MessagesFavedStickers = 1;
		PredMessagesFavedStickersNotModified MessagesFavedStickersNotModified = 2;
	}
}
message TypeVectorUser {
	repeated TypeUser User = 1;
}
message TypeVectorReceivedNotifyMessage {
	repeated TypeReceivedNotifyMessage ReceivedNotifyMessage = 1;
}
message TypeVectorStickerSetCovered {
	repeated TypeStickerSetCovered StickerSetCovered = 1;
}
message TypeVectorLangPackString {
	repeated TypeLangPackString LangPackString = 1;
}
message TypeVectorWallPaper {
	repeated TypeWallPaper WallPaper = 1;
}
message TypeVectorLong {
	repeated int64 values = 1;
}
message TypeVectorInt {
	repeated int32 values = 1;
}
message TypeVectorCdnFileHash {
	repeated TypeCdnFileHash CdnFileHash = 1;
}
message TypeVectorLangPackLanguage {
	repeated TypeLangPackLanguage LangPackLanguage = 1;
}
message TypeVectorContactStatus {
	repeated TypeContactStatus ContactStatus = 1;
}


// Predicates
message PredBoolFalse {
}

message PredBoolTrue {
}

message PredError {
	int32 Code = 1;
	string Text = 2;
}

message PredNull {
}

message PredInputPeerEmpty {
}

message PredInputPeerSelf {
}

message PredInputPeerChat {
	int32 Chat_id = 1;
}

message PredInputUserEmpty {
}

message PredInputUserSelf {
}

message PredInputPhoneContact {
	int64 Client_id = 1;
	string Phone = 2;
	string First_name = 3;
	string Last_name = 4;
}

message PredInputFile {
	int64 Id = 1;
	int32 Parts = 2;
	string Name = 3;
	string Md5_checksum = 4;
}

message PredInputMediaEmpty {
}

message PredInputMediaUploadedPhoto {
	int32 Flags = 1;
// default: InputFile
	TypeInputFile File = 2;
	string Caption = 3;
// default: Vector<InputDocument>
	repeated TypeInputDocument Stickers = 4;// flags.0?Vector<InputDocument>
	int32 Ttl_seconds = 5;
}

message PredInputMediaPhoto {
	int32 Flags = 1;
// default: InputPhoto
	TypeInputPhoto Id = 2;
	string Caption = 3;
	int32 Ttl_seconds = 4;
}

message PredInputMediaGeoPoint {
// default: InputGeoPoint
	TypeInputGeoPoint Geo_point = 1;
}

message PredInputMediaContact {
	string Phone_number = 1;
	string First_name = 2;
	string Last_name = 3;
}

message PredInputChatPhotoEmpty {
}

message PredInputChatUploadedPhoto {
// default: InputFile
	TypeInputFile File = 1;
}

message PredInputChatPhoto {
// default: InputPhoto
	TypeInputPhoto Id = 1;
}

message PredInputGeoPointEmpty {
}

message PredInputGeoPoint {
	double Lat = 1;
	double Long = 2;
}

message PredInputPhotoEmpty {
}

message PredInputPhoto {
	int64 Id = 1;
	int64 Access_hash = 2;
}

message PredInputFileLocation {
	int64 Volume_id = 1;
	int32 Local_id = 2;
	int64 Secret = 3;
}

message PredInputAppEvent {
	double Time = 1;
	string Type = 2;
	int64 Peer = 3;
	string Data = 4;
}

message PredPeerUser {
	int32 User_id = 1;
}

message PredPeerChat {
	int32 Chat_id = 1;
}

message PredStorageFileUnknown {
}

message PredStorageFileJpeg {
}

message PredStorageFileGif {
}

message PredStorageFilePng {
}

message PredStorageFileMp3 {
}

message PredStorageFileMov {
}

message PredStorageFilePartial {
}

message PredStorageFileMp4 {
}

message PredStorageFileWebp {
}

message PredFileLocationUnavailable {
	int64 Volume_id = 1;
	int32 Local_id = 2;
	int64 Secret = 3;
}

message PredFileLocation {
	int32 Dc_id = 1;
	int64 Volume_id = 2;
	int32 Local_id = 3;
	int64 Secret = 4;
}

message PredUserEmpty {
	int32 Id = 1;
}

message PredUserProfilePhotoEmpty {
}

message PredUserProfilePhoto {
	int64 Photo_id = 1;
// default: FileLocation
	TypeFileLocation Photo_small = 2;
// default: FileLocation
	TypeFileLocation Photo_big = 3;
}

message PredUserStatusEmpty {
}

message PredUserStatusOnline {
	int32 Expires = 1;
}

message PredUserStatusOffline {
	int32 Was_online = 1;
}

message PredChatEmpty {
	int32 Id = 1;
}

message PredChat {
	int32 Flags = 1;
// Creator	bool // flags.0?true
// Kicked	bool // flags.1?true
// Left	bool // flags.2?true
// Admins_enabled	bool // flags.3?true
// Admin	bool // flags.4?true
// Deactivated	bool // flags.5?true
	int32 Id = 8;
	string Title = 9;
// default: ChatPhoto
	TypeChatPhoto Photo = 10;
	int32 Participants_count = 11;
	int32 Date = 12;
	int32 Version = 13;
// default: InputChannel
	TypeInputChannel Migrated_to = 14;// flags.6?InputChannel
}

message PredChatForbidden {
	int32 Id = 1;
	string Title = 2;
}

message PredChatFull {
	int32 Id = 1;
// default: ChatParticipants
	TypeChatParticipants Participants = 2;
// default: Photo
	TypePhoto Chat_photo = 3;
// default: PeerNotifySettings
	TypePeerNotifySettings Notify_settings = 4;
// default: ExportedChatInvite
	TypeExportedChatInvite Exported_invite = 5;
// default: Vector<BotInfo>
	repeated TypeBotInfo Bot_info = 6;
}

message PredChatParticipant {
	int32 User_id = 1;
	int32 Inviter_id = 2;
	int32 Date = 3;
}

message PredChatParticipantsForbidden {
	int32 Flags = 1;
	int32 Chat_id = 2;
// default: ChatParticipant
	TypeChatParticipant Self_participant = 3;// flags.0?ChatParticipant
}

message PredChatParticipants {
	int32 Chat_id = 1;
// default: Vector<ChatParticipant>
	repeated TypeChatParticipant Participants = 2;
	int32 Version = 3;
}

message PredChatPhotoEmpty {
}

message PredChatPhoto {
// default: FileLocation
	TypeFileLocation Photo_small = 1;
// default: FileLocation
	TypeFileLocation Photo_big = 2;
}

message PredMessageEmpty {
	int32 Id = 1;
}

message PredMessage {
	int32 Flags = 1;
// Out	bool // flags.1?true
// Mentioned	bool // flags.4?true
// Media_unread	bool // flags.5?true
// Silent	bool // flags.13?true
// Post	bool // flags.14?true
	int32 Id = 7;
	int32 From_id = 8;
// default: Peer
	TypePeer To_id = 9;
// default: MessageFwdHeader
	TypeMessageFwdHeader Fwd_from = 10;// flags.2?MessageFwdHeader
	int32 Via_bot_id = 11;
	int32 Reply_to_msg_id = 12;
	int32 Date = 13;
	string Message = 14;
// default: MessageMedia
	TypeMessageMedia Media = 15;// flags.9?MessageMedia
// default: ReplyMarkup
	TypeReplyMarkup Reply_markup = 16;// flags.6?ReplyMarkup
// default: Vector<MessageEntity>
	repeated TypeMessageEntity Entities = 17;// flags.7?Vector<MessageEntity>
	int32 Views = 18;
	int32 Edit_date = 19;
	string Post_author = 20;
}

message PredMessageService {
	int32 Flags = 1;
// Out	bool // flags.1?true
// Mentioned	bool // flags.4?true
// Media_unread	bool // flags.5?true
// Silent	bool // flags.13?true
// Post	bool // flags.14?true
	int32 Id = 7;
	int32 From_id = 8;
// default: Peer
	TypePeer To_id = 9;
	int32 Reply_to_msg_id = 10;
	int32 Date = 11;
// default: MessageAction
	TypeMessageAction Action = 12;
}

message PredMessageMediaEmpty {
}

message PredMessageMediaPhoto {
	int32 Flags = 1;
// default: Photo
	TypePhoto Photo = 2;// flags.0?Photo
	string Caption = 3;
	int32 Ttl_seconds = 4;
}

message PredMessageMediaGeo {
// default: GeoPoint
	TypeGeoPoint Geo = 1;
}

message PredMessageMediaContact {
	string Phone_number = 1;
	string First_name = 2;
	string Last_name = 3;
	int32 User_id = 4;
}

message PredMessageMediaUnsupported {
}

message PredMessageActionEmpty {
}

message PredMessageActionChatCreate {
	string Title = 1;
	repeated int32 Users = 2;
}

message PredMessageActionChatEditTitle {
	string Title = 1;
}

message PredMessageActionChatEditPhoto {
// default: Photo
	TypePhoto Photo = 1;
}

message PredMessageActionChatDeletePhoto {
}

message PredMessageActionChatAddUser {
	repeated int32 Users = 1;
}

message PredMessageActionChatDeleteUser {
	int32 User_id = 1;
}

message PredDialog {
	int32 Flags = 1;
// Pinned	bool // flags.2?true
// default: Peer
	TypePeer Peer = 3;
	int32 Top_message = 4;
	int32 Read_inbox_max_id = 5;
	int32 Read_outbox_max_id = 6;
	int32 Unread_count = 7;
	int32 Unread_mentions_count = 8;
// default: PeerNotifySettings
	TypePeerNotifySettings Notify_settings = 9;
	int32 Pts = 10;
// default: DraftMessage
	TypeDraftMessage Draft = 11;// flags.1?DraftMessage
}

message PredPhotoEmpty {
	int64 Id = 1;
}

message PredPhoto {
	int32 Flags = 1;
// Has_stickers	bool // flags.0?true
	int64 Id = 3;
	int64 Access_hash = 4;
	int32 Date = 5;
// default: Vector<PhotoSize>
	repeated TypePhotoSize Sizes = 6;
}

message PredPhotoSizeEmpty {
	string Type = 1;
}

message PredPhotoSize {
	string Type = 1;
// default: FileLocation
	TypeFileLocation Location = 2;
	int32 W = 3;
	int32 H = 4;
	int32 Size = 5;
}

message PredPhotoCachedSize {
	string Type = 1;
// default: FileLocation
	TypeFileLocation Location = 2;
	int32 W = 3;
	int32 H = 4;
	bytes Bytes = 5;
}

message PredGeoPointEmpty {
}

message PredGeoPoint {
	double Long = 1;
	double Lat = 2;
}

message PredAuthCheckedPhone {
// default: Bool
	TypeBool Phone_registered = 1;
}

message PredAuthSentCode {
	int32 Flags = 1;
// Phone_registered	bool // flags.0?true
// default: authSentCodeType
	TypeAuthSentCodeType Type = 3;
	string Phone_code_hash = 4;
// default: authCodeType
	TypeAuthCodeType Next_type = 5;// flags.1?authCodeType
	int32 Timeout = 6;
}

message PredAuthAuthorization {
	int32 Flags = 1;
	int32 Tmp_sessions = 2;
// default: User
	TypeUser User = 3;
}

message PredAuthExportedAuthorization {
	int32 Id = 1;
	bytes Bytes = 2;
}

message PredInputNotifyPeer {
// default: InputPeer
	TypeInputPeer Peer = 1;
}

message PredInputNotifyUsers {
}

message PredInputNotifyChats {
}

message PredInputNotifyAll {
}

message PredInputPeerNotifySettings {
	int32 Flags = 1;
// Show_previews	bool // flags.0?true
// Silent	bool // flags.1?true
	int32 Mute_until = 4;
	string Sound = 5;
}

message PredPeerNotifyEventsEmpty {
}

message PredPeerNotifyEventsAll {
}

message PredPeerNotifySettingsEmpty {
}

message PredPeerNotifySettings {
	int32 Flags = 1;
// Show_previews	bool // flags.0?true
// Silent	bool // flags.1?true
	int32 Mute_until = 4;
	string Sound = 5;
}

message PredWallPaper {
	int32 Id = 1;
	string Title = 2;
// default: Vector<PhotoSize>
	repeated TypePhotoSize Sizes = 3;
	int32 Color = 4;
}

message PredUserFull {
	int32 Flags = 1;
// Blocked	bool // flags.0?true
// Phone_calls_available	bool // flags.4?true
// Phone_calls_private	bool // flags.5?true
// default: User
	TypeUser User = 5;
	string About = 6;
// default: contactsLink
	TypeContactsLink Link = 7;
// default: Photo
	TypePhoto Profile_photo = 8;// flags.2?Photo
// default: PeerNotifySettings
	TypePeerNotifySettings Notify_settings = 9;
// default: BotInfo
	TypeBotInfo Bot_info = 10;// flags.3?BotInfo
	int32 Common_chats_count = 11;
}

message PredContact {
	int32 User_id = 1;
// default: Bool
	TypeBool Mutual = 2;
}

message PredImportedContact {
	int32 User_id = 1;
	int64 Client_id = 2;
}

message PredContactBlocked {
	int32 User_id = 1;
	int32 Date = 2;
}

message PredContactStatus {
	int32 User_id = 1;
// default: UserStatus
	TypeUserStatus Status = 2;
}

message PredContactsLink {
// default: ContactLink
	TypeContactLink My_link = 1;
// default: ContactLink
	TypeContactLink Foreign_link = 2;
// default: User
	TypeUser User = 3;
}

message PredContactsContacts {
// default: Vector<Contact>
	repeated TypeContact Contacts = 1;
	int32 Saved_count = 2;
// default: Vector<User>
	repeated TypeUser Users = 3;
}

message PredContactsContactsNotModified {
}

message PredContactsImportedContacts {
// default: Vector<ImportedContact>
	repeated TypeImportedContact Imported = 1;
// default: Vector<PopularContact>
	repeated TypePopularContact Popular_invites = 2;
	repeated int64 Retry_contacts = 3;
// default: Vector<User>
	repeated TypeUser Users = 4;
}

message PredContactsBlocked {
// default: Vector<ContactBlocked>
	repeated TypeContactBlocked Blocked = 1;
// default: Vector<User>
	repeated TypeUser Users = 2;
}

message PredContactsBlockedSlice {
	int32 Count = 1;
// default: Vector<ContactBlocked>
	repeated TypeContactBlocked Blocked = 2;
// default: Vector<User>
	repeated TypeUser Users = 3;
}

message PredContactsFound {
// default: Vector<Peer>
	repeated TypePeer Results = 1;
// default: Vector<Chat>
	repeated TypeChat Chats = 2;
// default: Vector<User>
	repeated TypeUser Users = 3;
}

message PredMessagesDialogs {
// default: Vector<Dialog>
	repeated TypeDialog Dialogs = 1;
// default: Vector<Message>
	repeated TypeMessage Messages = 2;
// default: Vector<Chat>
	repeated TypeChat Chats = 3;
// default: Vector<User>
	repeated TypeUser Users = 4;
}

message PredMessagesDialogsSlice {
	int32 Count = 1;
// default: Vector<Dialog>
	repeated TypeDialog Dialogs = 2;
// default: Vector<Message>
	repeated TypeMessage Messages = 3;
// default: Vector<Chat>
	repeated TypeChat Chats = 4;
// default: Vector<User>
	repeated TypeUser Users = 5;
}

message PredMessagesMessages {
// default: Vector<Message>
	repeated TypeMessage Messages = 1;
// default: Vector<Chat>
	repeated TypeChat Chats = 2;
// default: Vector<User>
	repeated TypeUser Users = 3;
}

message PredMessagesMessagesSlice {
	int32 Count = 1;
// default: Vector<Message>
	repeated TypeMessage Messages = 2;
// default: Vector<Chat>
	repeated TypeChat Chats = 3;
// default: Vector<User>
	repeated TypeUser Users = 4;
}

message PredMessagesChats {
// default: Vector<Chat>
	repeated TypeChat Chats = 1;
}

message PredMessagesChatFull {
// default: ChatFull
	TypeChatFull Full_chat = 1;
// default: Vector<Chat>
	repeated TypeChat Chats = 2;
// default: Vector<User>
	repeated TypeUser Users = 3;
}

message PredMessagesAffectedHistory {
	int32 Pts = 1;
	int32 Pts_count = 2;
	int32 Offset = 3;
}

message PredInputMessagesFilterEmpty {
}

message PredInputMessagesFilterPhotos {
}

message PredInputMessagesFilterVideo {
}

message PredInputMessagesFilterPhotoVideo {
}

message PredUpdateNewMessage {
// default: Message
	TypeMessage Message = 1;
	int32 Pts = 2;
	int32 Pts_count = 3;
}

message PredUpdateMessageID {
	int32 Id = 1;
	int64 Random_id = 2;
}

message PredUpdateDeleteMessages {
	repeated int32 Messages = 1;
	int32 Pts = 2;
	int32 Pts_count = 3;
}

message PredUpdateUserTyping {
	int32 User_id = 1;
// default: SendMessageAction
	TypeSendMessageAction Action = 2;
}

message PredUpdateChatUserTyping {
	int32 Chat_id = 1;
	int32 User_id = 2;
// default: SendMessageAction
	TypeSendMessageAction Action = 3;
}

message PredUpdateChatParticipants {
// default: ChatParticipants
	TypeChatParticipants Participants = 1;
}

message PredUpdateUserStatus {
	int32 User_id = 1;
// default: UserStatus
	TypeUserStatus Status = 2;
}

message PredUpdateUserName {
	int32 User_id = 1;
	string First_name = 2;
	string Last_name = 3;
	string Username = 4;
}

message PredUpdateUserPhoto {
	int32 User_id = 1;
	int32 Date = 2;
// default: UserProfilePhoto
	TypeUserProfilePhoto Photo = 3;
// default: Bool
	TypeBool Previous = 4;
}

message PredUpdateContactRegistered {
	int32 User_id = 1;
	int32 Date = 2;
}

message PredUpdateContactLink {
	int32 User_id = 1;
// default: ContactLink
	TypeContactLink My_link = 2;
// default: ContactLink
	TypeContactLink Foreign_link = 3;
}

message PredUpdatesState {
	int32 Pts = 1;
	int32 Qts = 2;
	int32 Date = 3;
	int32 Seq = 4;
	int32 Unread_count = 5;
}

message PredUpdatesDifferenceEmpty {
	int32 Date = 1;
	int32 Seq = 2;
}

message PredUpdatesDifference {
// default: Vector<Message>
	repeated TypeMessage New_messages = 1;
// default: Vector<EncryptedMessage>
	repeated TypeEncryptedMessage New_encrypted_messages = 2;
// default: Vector<Update>
	repeated TypeUpdate Other_updates = 3;
// default: Vector<Chat>
	repeated TypeChat Chats = 4;
// default: Vector<User>
	repeated TypeUser Users = 5;
// default: updatesState
	TypeUpdatesState State = 6;
}

message PredUpdatesDifferenceSlice {
// default: Vector<Message>
	repeated TypeMessage New_messages = 1;
// default: Vector<EncryptedMessage>
	repeated TypeEncryptedMessage New_encrypted_messages = 2;
// default: Vector<Update>
	repeated TypeUpdate Other_updates = 3;
// default: Vector<Chat>
	repeated TypeChat Chats = 4;
// default: Vector<User>
	repeated TypeUser Users = 5;
// default: updatesState
	TypeUpdatesState Intermediate_state = 6;
}

message PredUpdatesTooLong {
}

message PredUpdateShortMessage {
	int32 Flags = 1;
// Out	bool // flags.1?true
// Mentioned	bool // flags.4?true
// Media_unread	bool // flags.5?true
// Silent	bool // flags.13?true
	int32 Id = 6;
	int32 User_id = 7;
	string Message = 8;
	int32 Pts = 9;
	int32 Pts_count = 10;
	int32 Date = 11;
// default: MessageFwdHeader
	TypeMessageFwdHeader Fwd_from = 12;// flags.2?MessageFwdHeader
	int32 Via_bot_id = 13;
	int32 Reply_to_msg_id = 14;
// default: Vector<MessageEntity>
	repeated TypeMessageEntity Entities = 15;// flags.7?Vector<MessageEntity>
}

message PredUpdateShortChatMessage {
	int32 Flags = 1;
// Out	bool // flags.1?true
// Mentioned	bool // flags.4?true
// Media_unread	bool // flags.5?true
// Silent	bool // flags.13?true
	int32 Id = 6;
	int32 From_id = 7;
	int32 Chat_id = 8;
	string Message = 9;
	int32 Pts = 10;
	int32 Pts_count = 11;
	int32 Date = 12;
// default: MessageFwdHeader
	TypeMessageFwdHeader Fwd_from = 13;// flags.2?MessageFwdHeader
	int32 Via_bot_id = 14;
	int32 Reply_to_msg_id = 15;
// default: Vector<MessageEntity>
	repeated TypeMessageEntity Entities = 16;// flags.7?Vector<MessageEntity>
}

message PredUpdateShort {
// default: Update
	TypeUpdate Update = 1;
	int32 Date = 2;
}

message PredUpdatesCombined {
// default: Vector<Update>
	repeated TypeUpdate Updates = 1;
// default: Vector<User>
	repeated TypeUser Users = 2;
// default: Vector<Chat>
	repeated TypeChat Chats = 3;
	int32 Date = 4;
	int32 Seq_start = 5;
	int32 Seq = 6;
}

message PredUpdates {
// default: Vector<Update>
	repeated TypeUpdate Updates = 1;
// default: Vector<User>
	repeated TypeUser Users = 2;
// default: Vector<Chat>
	repeated TypeChat Chats = 3;
	int32 Date = 4;
	int32 Seq = 5;
}

message PredPhotosPhoto {
// default: Photo
	TypePhoto Photo = 1;
// default: Vector<User>
	repeated TypeUser Users = 2;
}

message PredUploadFile {
// default: storageFileType
	TypeStorageFileType Type = 1;
	int32 Mtime = 2;
	bytes Bytes = 3;
}

message PredDcOption {
	int32 Flags = 1;
// Ipv6	bool // flags.0?true
// Media_only	bool // flags.1?true
// Tcpo_only	bool // flags.2?true
// Cdn	bool // flags.3?true
// Static	bool // flags.4?true
	int32 Id = 7;
	string Ip_address = 8;
	int32 Port = 9;
}

message PredConfig {
	int32 Flags = 1;
// Phonecalls_enabled	bool // flags.1?true
	int32 Date = 3;
	int32 Expires = 4;
// default: Bool
	TypeBool Test_mode = 5;
	int32 This_dc = 6;
// default: Vector<DcOption>
	repeated TypeDcOption Dc_options = 7;
	int32 Chat_size_max = 8;
	int32 Megagroup_size_max = 9;
	int32 Forwarded_count_max = 10;
	int32 Online_update_period_ms = 11;
	int32 Offline_blur_timeout_ms = 12;
	int32 Offline_idle_timeout_ms = 13;
	int32 Online_cloud_timeout_ms = 14;
	int32 Notify_cloud_delay_ms = 15;
	int32 Notify_default_delay_ms = 16;
	int32 Chat_big_size = 17;
	int32 Push_chat_period_ms = 18;
	int32 Push_chat_limit = 19;
	int32 Saved_gifs_limit = 20;
	int32 Edit_time_limit = 21;
	int32 Rating_e_decay = 22;
	int32 Stickers_recent_limit = 23;
	int32 Stickers_faved_limit = 24;
	int32 Tmp_sessions = 25;
	int32 Pinned_dialogs_count_max = 26;
	int32 Call_receive_timeout_ms = 27;
	int32 Call_ring_timeout_ms = 28;
	int32 Call_connect_timeout_ms = 29;
	int32 Call_packet_timeout_ms = 30;
	string Me_url_prefix = 31;
	string Suggested_lang_code = 32;
	int32 Lang_pack_version = 33;
// default: Vector<DisabledFeature>
	repeated TypeDisabledFeature Disabled_features = 34;
}

message PredNearestDc {
	string Country = 1;
	int32 This_dc = 2;
	int32 Nearest_dc = 3;
}

message PredHelpAppUpdate {
	int32 Id = 1;
// default: Bool
	TypeBool Critical = 2;
	string Url = 3;
	string Text = 4;
}

message PredHelpNoAppUpdate {
}

message PredHelpInviteText {
	string Message = 1;
}

message PredInputPeerNotifyEventsEmpty {
}

message PredInputPeerNotifyEventsAll {
}

message PredPhotosPhotos {
// default: Vector<Photo>
	repeated TypePhoto Photos = 1;
// default: Vector<User>
	repeated TypeUser Users = 2;
}

message PredPhotosPhotosSlice {
	int32 Count = 1;
// default: Vector<Photo>
	repeated TypePhoto Photos = 2;
// default: Vector<User>
	repeated TypeUser Users = 3;
}

message PredWallPaperSolid {
	int32 Id = 1;
	string Title = 2;
	int32 Bg_color = 3;
	int32 Color = 4;
}

message PredUpdateNewEncryptedMessage {
// default: EncryptedMessage
	TypeEncryptedMessage Message = 1;
	int32 Qts = 2;
}

message PredUpdateEncryptedChatTyping {
	int32 Chat_id = 1;
}

message PredUpdateEncryption {
// default: EncryptedChat
	TypeEncryptedChat Chat = 1;
	int32 Date = 2;
}

message PredUpdateEncryptedMessagesRead {
	int32 Chat_id = 1;
	int32 Max_date = 2;
	int32 Date = 3;
}

message PredEncryptedChatEmpty {
	int32 Id = 1;
}

message PredEncryptedChatWaiting {
	int32 Id = 1;
	int64 Access_hash = 2;
	int32 Date = 3;
	int32 Admin_id = 4;
	int32 Participant_id = 5;
}

message PredEncryptedChatRequested {
	int32 Id = 1;
	int64 Access_hash = 2;
	int32 Date = 3;
	int32 Admin_id = 4;
	int32 Participant_id = 5;
	bytes G_a = 6;
}

message PredEncryptedChat {
	int32 Id = 1;
	int64 Access_hash = 2;
	int32 Date = 3;
	int32 Admin_id = 4;
	int32 Participant_id = 5;
	bytes G_a_or_b = 6;
	int64 Key_fingerprint = 7;
}

message PredEncryptedChatDiscarded {
	int32 Id = 1;
}

message PredInputEncryptedChat {
	int32 Chat_id = 1;
	int64 Access_hash = 2;
}

message PredEncryptedFileEmpty {
}

message PredEncryptedFile {
	int64 Id = 1;
	int64 Access_hash = 2;
	int32 Size = 3;
	int32 Dc_id = 4;
	int32 Key_fingerprint = 5;
}

message PredInputEncryptedFileEmpty {
}

message PredInputEncryptedFileUploaded {
	int64 Id = 1;
	int32 Parts = 2;
	string Md5_checksum = 3;
	int32 Key_fingerprint = 4;
}

message PredInputEncryptedFile {
	int64 Id = 1;
	int64 Access_hash = 2;
}

message PredInputEncryptedFileLocation {
	int64 Id = 1;
	int64 Access_hash = 2;
}

message PredEncryptedMessage {
	int64 Random_id = 1;
	int32 Chat_id = 2;
	int32 Date = 3;
	bytes Bytes = 4;
// default: EncryptedFile
	TypeEncryptedFile File = 5;
}

message PredEncryptedMessageService {
	int64 Random_id = 1;
	int32 Chat_id = 2;
	int32 Date = 3;
	bytes Bytes = 4;
}

message PredMessagesDhConfigNotModified {
	bytes Random = 1;
}

message PredMessagesDhConfig {
	int32 G = 1;
	bytes P = 2;
	int32 Version = 3;
	bytes Random = 4;
}

message PredMessagesSentEncryptedMessage {
	int32 Date = 1;
}

message PredMessagesSentEncryptedFile {
	int32 Date = 1;
// default: EncryptedFile
	TypeEncryptedFile File = 2;
}

message PredInputFileBig {
	int64 Id = 1;
	int32 Parts = 2;
	string Name = 3;
}

message PredInputEncryptedFileBigUploaded {
	int64 Id = 1;
	int32 Parts = 2;
	int32 Key_fingerprint = 3;
}

message PredStorageFilePdf {
}

message PredInputMessagesFilterDocument {
}

message PredInputMessagesFilterPhotoVideoDocuments {
}

message PredUpdateChatParticipantAdd {
	int32 Chat_id = 1;
	int32 User_id = 2;
	int32 Inviter_id = 3;
	int32 Date = 4;
	int32 Version = 5;
}

message PredUpdateChatParticipantDelete {
	int32 Chat_id = 1;
	int32 User_id = 2;
	int32 Version = 3;
}

message PredUpdateDcOptions {
// default: Vector<DcOption>
	repeated TypeDcOption Dc_options = 1;
}

message PredInputMediaUploadedDocument {
	int32 Flags = 1;
// default: InputFile
	TypeInputFile File = 2;
// default: InputFile
	TypeInputFile Thumb = 3;// flags.2?InputFile
	string Mime_type = 4;
// default: Vector<DocumentAttribute>
	repeated TypeDocumentAttribute Attributes = 5;
	string Caption = 6;
// default: Vector<InputDocument>
	repeated TypeInputDocument Stickers = 7;// flags.0?Vector<InputDocument>
	int32 Ttl_seconds = 8;
}

message PredInputMediaDocument {
	int32 Flags = 1;
// default: InputDocument
	TypeInputDocument Id = 2;
	string Caption = 3;
	int32 Ttl_seconds = 4;
}

message PredMessageMediaDocument {
	int32 Flags = 1;
// default: Document
	TypeDocument Document = 2;// flags.0?Document
	string Caption = 3;
	int32 Ttl_seconds = 4;
}

message PredInputDocumentEmpty {
}

message PredInputDocument {
	int64 Id = 1;
	int64 Access_hash = 2;
}

message PredInputDocumentFileLocation {
	int64 Id = 1;
	int64 Access_hash = 2;
	int32 Version = 3;
}

message PredDocumentEmpty {
	int64 Id = 1;
}

message PredDocument {
	int64 Id = 1;
	int64 Access_hash = 2;
	int32 Date = 3;
	string Mime_type = 4;
	int32 Size = 5;
// default: PhotoSize
	TypePhotoSize Thumb = 6;
	int32 Dc_id = 7;
	int32 Version = 8;
// default: Vector<DocumentAttribute>
	repeated TypeDocumentAttribute Attributes = 9;
}

message PredHelpSupport {
	string Phone_number = 1;
// default: User
	TypeUser User = 2;
}

message PredNotifyAll {
}

message PredNotifyChats {
}

message PredNotifyPeer {
// default: Peer
	TypePeer Peer = 1;
}

message PredNotifyUsers {
}

message PredUpdateUserBlocked {
	int32 User_id = 1;
// default: Bool
	TypeBool Blocked = 2;
}

message PredUpdateNotifySettings {
// default: NotifyPeer
	TypeNotifyPeer Peer = 1;
// default: PeerNotifySettings
	TypePeerNotifySettings Notify_settings = 2;
}

message PredSendMessageTypingAction {
}

message PredSendMessageCancelAction {
}

message PredSendMessageRecordVideoAction {
}

message PredSendMessageUploadVideoAction {
	int32 Progress = 1;
}

message PredSendMessageRecordAudioAction {
}

message PredSendMessageUploadAudioAction {
	int32 Progress = 1;
}

message PredSendMessageUploadPhotoAction {
	int32 Progress = 1;
}

message PredSendMessageUploadDocumentAction {
	int32 Progress = 1;
}

message PredSendMessageGeoLocationAction {
}

message PredSendMessageChooseContactAction {
}

message PredUpdateServiceNotification {
	int32 Flags = 1;
// Popup	bool // flags.0?true
	int32 Inbox_date = 3;
	string Type = 4;
	string Message = 5;
// default: MessageMedia
	TypeMessageMedia Media = 6;
// default: Vector<MessageEntity>
	repeated TypeMessageEntity Entities = 7;
}

message PredUserStatusRecently {
}

message PredUserStatusLastWeek {
}

message PredUserStatusLastMonth {
}

message PredUpdatePrivacy {
// default: PrivacyKey
	TypePrivacyKey Key = 1;
// default: Vector<PrivacyRule>
	repeated TypePrivacyRule Rules = 2;
}

message PredInputPrivacyKeyStatusTimestamp {
}

message PredPrivacyKeyStatusTimestamp {
}

message PredInputPrivacyValueAllowContacts {
}

message PredInputPrivacyValueAllowAll {
}

message PredInputPrivacyValueAllowUsers {
// default: Vector<InputUser>
	repeated TypeInputUser Users = 1;
}

message PredInputPrivacyValueDisallowContacts {
}

message PredInputPrivacyValueDisallowAll {
}

message PredInputPrivacyValueDisallowUsers {
// default: Vector<InputUser>
	repeated TypeInputUser Users = 1;
}

message PredPrivacyValueAllowContacts {
}

message PredPrivacyValueAllowAll {
}

message PredPrivacyValueAllowUsers {
	repeated int32 Users = 1;
}

message PredPrivacyValueDisallowContacts {
}

message PredPrivacyValueDisallowAll {
}

message PredPrivacyValueDisallowUsers {
	repeated int32 Users = 1;
}

message PredAccountPrivacyRules {
// default: Vector<PrivacyRule>
	repeated TypePrivacyRule Rules = 1;
// default: Vector<User>
	repeated TypeUser Users = 2;
}

message PredAccountDaysTTL {
	int32 Days = 1;
}

message PredUpdateUserPhone {
	int32 User_id = 1;
	string Phone = 2;
}

message PredDisabledFeature {
	string Feature = 1;
	string Description = 2;
}

message PredDocumentAttributeImageSize {
	int32 W = 1;
	int32 H = 2;
}

message PredDocumentAttributeAnimated {
}

message PredDocumentAttributeSticker {
	int32 Flags = 1;
// Mask	bool // flags.1?true
	string Alt = 3;
// default: InputStickerSet
	TypeInputStickerSet Stickerset = 4;
// default: MaskCoords
	TypeMaskCoords Mask_coords = 5;// flags.0?MaskCoords
}

message PredDocumentAttributeVideo {
	int32 Flags = 1;
// Round_message	bool // flags.0?true
	int32 Duration = 3;
	int32 W = 4;
	int32 H = 5;
}

message PredDocumentAttributeAudio {
	int32 Flags = 1;
// Voice	bool // flags.10?true
	int32 Duration = 3;
	string Title = 4;
	string Performer = 5;
	bytes Waveform = 6;
}

message PredDocumentAttributeFilename {
	string File_name = 1;
}

message PredMessagesStickersNotModified {
}

message PredMessagesStickers {
	string Hash = 1;
// default: Vector<Document>
	repeated TypeDocument Stickers = 2;
}

message PredStickerPack {
	string Emoticon = 1;
	repeated int64 Documents = 2;
}

message PredMessagesAllStickersNotModified {
}

message PredMessagesAllStickers {
	int32 Hash = 1;
// default: Vector<StickerSet>
	repeated TypeStickerSet Sets = 2;
}

message PredAccountNoPassword {
	bytes New_salt = 1;
	string Email_unconfirmed_pattern = 2;
}

message PredAccountPassword {
	bytes Current_salt = 1;
	bytes New_salt = 2;
	string Hint = 3;
// default: Bool
	TypeBool Has_recovery = 4;
	string Email_unconfirmed_pattern = 5;
}

message PredUpdateReadHistoryInbox {
// default: Peer
	TypePeer Peer = 1;
	int32 Max_id = 2;
	int32 Pts = 3;
	int32 Pts_count = 4;
}

message PredUpdateReadHistoryOutbox {
// default: Peer
	TypePeer Peer = 1;
	int32 Max_id = 2;
	int32 Pts = 3;
	int32 Pts_count = 4;
}

message PredMessagesAffectedMessages {
	int32 Pts = 1;
	int32 Pts_count = 2;
}

message PredContactLinkUnknown {
}

message PredContactLinkNone {
}

message PredContactLinkHasPhone {
}

message PredContactLinkContact {
}

message PredUpdateWebPage {
// default: WebPage
	TypeWebPage Webpage = 1;
	int32 Pts = 2;
	int32 Pts_count = 3;
}

message PredWebPageEmpty {
	int64 Id = 1;
}

message PredWebPagePending {
	int64 Id = 1;
	int32 Date = 2;
}

message PredWebPage {
	int32 Flags = 1;
	int64 Id = 2;
	string Url = 3;
	string Display_url = 4;
	int32 Hash = 5;
	string Type = 6;
	string Site_name = 7;
	string Title = 8;
	string Description = 9;
// default: Photo
	TypePhoto Photo = 10;// flags.4?Photo
	string Embed_url = 11;
	string Embed_type = 12;
	int32 Embed_width = 13;
	int32 Embed_height = 14;
	int32 Duration = 15;
	string Author = 16;
// default: Document
	TypeDocument Document = 17;// flags.9?Document
// default: Page
	TypePage Cached_page = 18;// flags.10?Page
}

message PredMessageMediaWebPage {
// default: WebPage
	TypeWebPage Webpage = 1;
}

message PredAuthorization {
	int64 Hash = 1;
	int32 Flags = 2;
	string Device_model = 3;
	string Platform = 4;
	string System_version = 5;
	int32 Api_id = 6;
	string App_name = 7;
	string App_version = 8;
	int32 Date_created = 9;
	int32 Date_active = 10;
	string Ip = 11;
	string Country = 12;
	string Region = 13;
}

message PredAccountAuthorizations {
// default: Vector<Authorization>
	repeated TypeAuthorization Authorizations = 1;
}

message PredAccountPasswordSettings {
	string Email = 1;
}

message PredAccountPasswordInputSettings {
	int32 Flags = 1;
	bytes New_salt = 2;
	bytes New_password_hash = 3;
	string Hint = 4;
	string Email = 5;
}

message PredAuthPasswordRecovery {
	string Email_pattern = 1;
}

message PredInputMediaVenue {
// default: InputGeoPoint
	TypeInputGeoPoint Geo_point = 1;
	string Title = 2;
	string Address = 3;
	string Provider = 4;
	string Venue_id = 5;
}

message PredMessageMediaVenue {
// default: GeoPoint
	TypeGeoPoint Geo = 1;
	string Title = 2;
	string Address = 3;
	string Provider = 4;
	string Venue_id = 5;
}

message PredReceivedNotifyMessage {
	int32 Id = 1;
	int32 Flags = 2;
}

message PredChatInviteEmpty {
}

message PredChatInviteExported {
	string Link = 1;
}

message PredChatInviteAlready {
// default: Chat
	TypeChat Chat = 1;
}

message PredChatInvite {
	int32 Flags = 1;
// Channel	bool // flags.0?true
// Broadcast	bool // flags.1?true
// Public	bool // flags.2?true
// Megagroup	bool // flags.3?true
	string Title = 6;
// default: ChatPhoto
	TypeChatPhoto Photo = 7;
	int32 Participants_count = 8;
// default: Vector<User>
	repeated TypeUser Participants = 9;// flags.4?Vector<User>
}

message PredMessageActionChatJoinedByLink {
	int32 Inviter_id = 1;
}

message PredUpdateReadMessagesContents {
	repeated int32 Messages = 1;
	int32 Pts = 2;
	int32 Pts_count = 3;
}

message PredInputStickerSetEmpty {
}

message PredInputStickerSetID {
	int64 Id = 1;
	int64 Access_hash = 2;
}

message PredInputStickerSetShortName {
	string Short_name = 1;
}

message PredStickerSet {
	int32 Flags = 1;
// Installed	bool // flags.0?true
// Archived	bool // flags.1?true
// Official	bool // flags.2?true
// Masks	bool // flags.3?true
	int64 Id = 6;
	int64 Access_hash = 7;
	string Title = 8;
	string Short_name = 9;
	int32 Count = 10;
	int32 Hash = 11;
}

message PredMessagesStickerSet {
// default: StickerSet
	TypeStickerSet Set = 1;
// default: Vector<StickerPack>
	repeated TypeStickerPack Packs = 2;
// default: Vector<Document>
	repeated TypeDocument Documents = 3;
}

message PredUser {
	int32 Flags = 1;
// Self	bool // flags.10?true
// Contact	bool // flags.11?true
// Mutual_contact	bool // flags.12?true
// Deleted	bool // flags.13?true
// Bot	bool // flags.14?true
// Bot_chat_history	bool // flags.15?true
// Bot_nochats	bool // flags.16?true
// Verified	bool // flags.17?true
// Restricted	bool // flags.18?true
// Min	bool // flags.20?true
// Bot_inline_geo	bool // flags.21?true
	int32 Id = 13;
	int64 Access_hash = 14;
	string First_name = 15;
	string Last_name = 16;
	string Username = 17;
	string Phone = 18;
// default: UserProfilePhoto
	TypeUserProfilePhoto Photo = 19;// flags.5?UserProfilePhoto
// default: UserStatus
	TypeUserStatus Status = 20;// flags.6?UserStatus
	int32 Bot_info_version = 21;
	string Restriction_reason = 22;
	string Bot_inline_placeholder = 23;
	string Lang_code = 24;
}

message PredBotCommand {
	string Command = 1;
	string Description = 2;
}

message PredBotInfo {
	int32 User_id = 1;
	string Description = 2;
// default: Vector<BotCommand>
	repeated TypeBotCommand Commands = 3;
}

message PredKeyboardButton {
	string Text = 1;
}

message PredKeyboardButtonRow {
// default: Vector<KeyboardButton>
	repeated TypeKeyboardButton Buttons = 1;
}

message PredReplyKeyboardHide {
	int32 Flags = 1;
// Selective	bool // flags.2?true
}

message PredReplyKeyboardForceReply {
	int32 Flags = 1;
// Single_use	bool // flags.1?true
// Selective	bool // flags.2?true
}

message PredReplyKeyboardMarkup {
	int32 Flags = 1;
// Resize	bool // flags.0?true
// Single_use	bool // flags.1?true
// Selective	bool // flags.2?true
// default: Vector<KeyboardButtonRow>
	repeated TypeKeyboardButtonRow Rows = 5;
}

message PredInputMessagesFilterUrl {
}

message PredInputPeerUser {
	int32 User_id = 1;
	int64 Access_hash = 2;
}

message PredInputUser {
	int32 User_id = 1;
	int64 Access_hash = 2;
}

message PredMessageEntityUnknown {
	int32 Offset = 1;
	int32 Length = 2;
}

message PredMessageEntityMention {
	int32 Offset = 1;
	int32 Length = 2;
}

message PredMessageEntityHashtag {
	int32 Offset = 1;
	int32 Length = 2;
}

message PredMessageEntityBotCommand {
	int32 Offset = 1;
	int32 Length = 2;
}

message PredMessageEntityUrl {
	int32 Offset = 1;
	int32 Length = 2;
}

message PredMessageEntityEmail {
	int32 Offset = 1;
	int32 Length = 2;
}

message PredMessageEntityBold {
	int32 Offset = 1;
	int32 Length = 2;
}

message PredMessageEntityItalic {
	int32 Offset = 1;
	int32 Length = 2;
}

message PredMessageEntityCode {
	int32 Offset = 1;
	int32 Length = 2;
}

message PredMessageEntityPre {
	int32 Offset = 1;
	int32 Length = 2;
	string Language = 3;
}

message PredMessageEntityTextUrl {
	int32 Offset = 1;
	int32 Length = 2;
	string Url = 3;
}

message PredUpdateShortSentMessage {
	int32 Flags = 1;
// Out	bool // flags.1?true
	int32 Id = 3;
	int32 Pts = 4;
	int32 Pts_count = 5;
	int32 Date = 6;
// default: MessageMedia
	TypeMessageMedia Media = 7;// flags.9?MessageMedia
// default: Vector<MessageEntity>
	repeated TypeMessageEntity Entities = 8;// flags.7?Vector<MessageEntity>
}

message PredInputPeerChannel {
	int32 Channel_id = 1;
	int64 Access_hash = 2;
}

message PredPeerChannel {
	int32 Channel_id = 1;
}

message PredChannel {
	int32 Flags = 1;
// Creator	bool // flags.0?true
// Left	bool // flags.2?true
// Editor	bool // flags.3?true
// Broadcast	bool // flags.5?true
// Verified	bool // flags.7?true
// Megagroup	bool // flags.8?true
// Restricted	bool // flags.9?true
// Democracy	bool // flags.10?true
// Signatures	bool // flags.11?true
// Min	bool // flags.12?true
	int32 Id = 12;
	int64 Access_hash = 13;
	string Title = 14;
	string Username = 15;
// default: ChatPhoto
	TypeChatPhoto Photo = 16;
	int32 Date = 17;
	int32 Version = 18;
	string Restriction_reason = 19;
// default: ChannelAdminRights
	TypeChannelAdminRights Admin_rights = 20;// flags.14?ChannelAdminRights
// default: ChannelBannedRights
	TypeChannelBannedRights Banned_rights = 21;// flags.15?ChannelBannedRights
}

message PredChannelForbidden {
	int32 Flags = 1;
// Broadcast	bool // flags.5?true
// Megagroup	bool // flags.8?true
	int32 Id = 4;
	int64 Access_hash = 5;
	string Title = 6;
	int32 Until_date = 7;
}

message PredChannelFull {
	int32 Flags = 1;
// Can_view_participants	bool // flags.3?true
// Can_set_username	bool // flags.6?true
// Can_set_stickers	bool // flags.7?true
	int32 Id = 5;
	string About = 6;
	int32 Participants_count = 7;
	int32 Admins_count = 8;
	int32 Kicked_count = 9;
	int32 Banned_count = 10;
	int32 Read_inbox_max_id = 11;
	int32 Read_outbox_max_id = 12;
	int32 Unread_count = 13;
// default: Photo
	TypePhoto Chat_photo = 14;
// default: PeerNotifySettings
	TypePeerNotifySettings Notify_settings = 15;
// default: ExportedChatInvite
	TypeExportedChatInvite Exported_invite = 16;
// default: Vector<BotInfo>
	repeated TypeBotInfo Bot_info = 17;
	int32 Migrated_from_chat_id = 18;
	int32 Migrated_from_max_id = 19;
	int32 Pinned_msg_id = 20;
// default: StickerSet
	TypeStickerSet Stickerset = 21;// flags.8?StickerSet
}

message PredMessageActionChannelCreate {
	string Title = 1;
}

message PredMessagesChannelMessages {
	int32 Flags = 1;
	int32 Pts = 2;
	int32 Count = 3;
// default: Vector<Message>
	repeated TypeMessage Messages = 4;
// default: Vector<Chat>
	repeated TypeChat Chats = 5;
// default: Vector<User>
	repeated TypeUser Users = 6;
}

message PredUpdateChannelTooLong {
	int32 Flags = 1;
	int32 Channel_id = 2;
	int32 Pts = 3;
}

message PredUpdateChannel {
	int32 Channel_id = 1;
}

message PredUpdateNewChannelMessage {
// default: Message
	TypeMessage Message = 1;
	int32 Pts = 2;
	int32 Pts_count = 3;
}

message PredUpdateReadChannelInbox {
	int32 Channel_id = 1;
	int32 Max_id = 2;
}

message PredUpdateDeleteChannelMessages {
	int32 Channel_id = 1;
	repeated int32 Messages = 2;
	int32 Pts = 3;
	int32 Pts_count = 4;
}

message PredUpdateChannelMessageViews {
	int32 Channel_id = 1;
	int32 Id = 2;
	int32 Views = 3;
}

message PredInputChannelEmpty {
}

message PredInputChannel {
	int32 Channel_id = 1;
	int64 Access_hash = 2;
}

message PredContactsResolvedPeer {
// default: Peer
	TypePeer Peer = 1;
// default: Vector<Chat>
	repeated TypeChat Chats = 2;
// default: Vector<User>
	repeated TypeUser Users = 3;
}

message PredMessageRange {
	int32 Min_id = 1;
	int32 Max_id = 2;
}

message PredUpdatesChannelDifferenceEmpty {
	int32 Flags = 1;
// Final	bool // flags.0?true
	int32 Pts = 3;
	int32 Timeout = 4;
}

message PredUpdatesChannelDifferenceTooLong {
	int32 Flags = 1;
// Final	bool // flags.0?true
	int32 Pts = 3;
	int32 Timeout = 4;
	int32 Top_message = 5;
	int32 Read_inbox_max_id = 6;
	int32 Read_outbox_max_id = 7;
	int32 Unread_count = 8;
	int32 Unread_mentions_count = 9;
// default: Vector<Message>
	repeated TypeMessage Messages = 10;
// default: Vector<Chat>
	repeated TypeChat Chats = 11;
// default: Vector<User>
	repeated TypeUser Users = 12;
}

message PredUpdatesChannelDifference {
	int32 Flags = 1;
// Final	bool // flags.0?true
	int32 Pts = 3;
	int32 Timeout = 4;
// default: Vector<Message>
	repeated TypeMessage New_messages = 5;
// default: Vector<Update>
	repeated TypeUpdate Other_updates = 6;
// default: Vector<Chat>
	repeated TypeChat Chats = 7;
// default: Vector<User>
	repeated TypeUser Users = 8;
}

message PredChannelMessagesFilterEmpty {
}

message PredChannelMessagesFilter {
	int32 Flags = 1;
// Exclude_new_messages	bool // flags.1?true
// default: Vector<MessageRange>
	repeated TypeMessageRange Ranges = 3;
}

message PredChannelParticipant {
	int32 User_id = 1;
	int32 Date = 2;
}

message PredChannelParticipantSelf {
	int32 User_id = 1;
	int32 Inviter_id = 2;
	int32 Date = 3;
}

message PredChannelParticipantCreator {
	int32 User_id = 1;
}

message PredChannelParticipantsRecent {
}

message PredChannelParticipantsAdmins {
}

message PredChannelParticipantsKicked {
	string Q = 1;
}

message PredChannelsChannelParticipants {
	int32 Count = 1;
// default: Vector<ChannelParticipant>
	repeated TypeChannelParticipant Participants = 2;
// default: Vector<User>
	repeated TypeUser Users = 3;
}

message PredChannelsChannelParticipant {
// default: ChannelParticipant
	TypeChannelParticipant Participant = 1;
// default: Vector<User>
	repeated TypeUser Users = 2;
}

message PredTrue {
}

message PredChatParticipantCreator {
	int32 User_id = 1;
}

message PredChatParticipantAdmin {
	int32 User_id = 1;
	int32 Inviter_id = 2;
	int32 Date = 3;
}

message PredUpdateChatAdmins {
	int32 Chat_id = 1;
// default: Bool
	TypeBool Enabled = 2;
	int32 Version = 3;
}

message PredUpdateChatParticipantAdmin {
	int32 Chat_id = 1;
	int32 User_id = 2;
// default: Bool
	TypeBool Is_admin = 3;
	int32 Version = 4;
}

message PredMessageActionChatMigrateTo {
	int32 Channel_id = 1;
}

message PredMessageActionChannelMigrateFrom {
	string Title = 1;
	int32 Chat_id = 2;
}

message PredChannelParticipantsBots {
}

message PredInputReportReasonSpam {
}

message PredInputReportReasonViolence {
}

message PredInputReportReasonPornography {
}

message PredInputReportReasonOther {
	string Text = 1;
}

message PredUpdateNewStickerSet {
// default: messagesStickerSet
	TypeMessagesStickerSet Stickerset = 1;
}

message PredUpdateStickerSetsOrder {
	int32 Flags = 1;
// Masks	bool // flags.0?true
	repeated int64 Order = 3;
}

message PredUpdateStickerSets {
}

message PredHelpTermsOfService {
	string Text = 1;
}

message PredFoundGif {
	string Url = 1;
	string Thumb_url = 2;
	string Content_url = 3;
	string Content_type = 4;
	int32 W = 5;
	int32 H = 6;
}

message PredInputMediaGifExternal {
	string Url = 1;
	string Q = 2;
}

message PredMessagesFoundGifs {
	int32 Next_offset = 1;
// default: Vector<FoundGif>
	repeated TypeFoundGif Results = 2;
}

message PredInputMessagesFilterGif {
}

message PredUpdateSavedGifs {
}

message PredUpdateBotInlineQuery {
	int32 Flags = 1;
	int64 Query_id = 2;
	int32 User_id = 3;
	string Query = 4;
// default: GeoPoint
	TypeGeoPoint Geo = 5;// flags.0?GeoPoint
	string Offset = 6;
}

message PredFoundGifCached {
	string Url = 1;
// default: Photo
	TypePhoto Photo = 2;
// default: Document
	TypeDocument Document = 3;
}

message PredMessagesSavedGifsNotModified {
}

message PredMessagesSavedGifs {
	int32 Hash = 1;
// default: Vector<Document>
	repeated TypeDocument Gifs = 2;
}

message PredInputBotInlineMessageMediaAuto {
	int32 Flags = 1;
	string Caption = 2;
// default: ReplyMarkup
	TypeReplyMarkup Reply_markup = 3;// flags.2?ReplyMarkup
}

message PredInputBotInlineMessageText {
	int32 Flags = 1;
// No_webpage	bool // flags.0?true
	string Message = 3;
// default: Vector<MessageEntity>
	repeated TypeMessageEntity Entities = 4;// flags.1?Vector<MessageEntity>
// default: ReplyMarkup
	TypeReplyMarkup Reply_markup = 5;// flags.2?ReplyMarkup
}

message PredInputBotInlineResult {
	int32 Flags = 1;
	string Id = 2;
	string Type = 3;
	string Title = 4;
	string Description = 5;
	string Url = 6;
	string Thumb_url = 7;
	string Content_url = 8;
	string Content_type = 9;
	int32 W = 10;
	int32 H = 11;
	int32 Duration = 12;
// default: InputBotInlineMessage
	TypeInputBotInlineMessage Send_message = 13;
}

message PredBotInlineMessageMediaAuto {
	int32 Flags = 1;
	string Caption = 2;
// default: ReplyMarkup
	TypeReplyMarkup Reply_markup = 3;// flags.2?ReplyMarkup
}

message PredBotInlineMessageText {
	int32 Flags = 1;
// No_webpage	bool // flags.0?true
	string Message = 3;
// default: Vector<MessageEntity>
	repeated TypeMessageEntity Entities = 4;// flags.1?Vector<MessageEntity>
// default: ReplyMarkup
	TypeReplyMarkup Reply_markup = 5;// flags.2?ReplyMarkup
}

message PredBotInlineResult {
	int32 Flags = 1;
	string Id = 2;
	string Type = 3;
	string Title = 4;
	string Description = 5;
	string Url = 6;
	string Thumb_url = 7;
	string Content_url = 8;
	string Content_type = 9;
	int32 W = 10;
	int32 H = 11;
	int32 Duration = 12;
// default: BotInlineMessage
	TypeBotInlineMessage Send_message = 13;
}

message PredMessagesBotResults {
	int32 Flags = 1;
// Gallery	bool // flags.0?true
	int64 Query_id = 3;
	string Next_offset = 4;
// default: InlineBotSwitchPM
	TypeInlineBotSwitchPM Switch_pm = 5;// flags.2?InlineBotSwitchPM
// default: Vector<BotInlineResult>
	repeated TypeBotInlineResult Results = 6;
	int32 Cache_time = 7;
}

message PredInputMessagesFilterVoice {
}

message PredInputMessagesFilterMusic {
}

message PredUpdateBotInlineSend {
	int32 Flags = 1;
	int32 User_id = 2;
	string Query = 3;
// default: GeoPoint
	TypeGeoPoint Geo = 4;// flags.0?GeoPoint
	string Id = 5;
// default: InputBotInlineMessageID
	TypeInputBotInlineMessageID Msg_id = 6;// flags.1?InputBotInlineMessageID
}

message PredInputPrivacyKeyChatInvite {
}

message PredPrivacyKeyChatInvite {
}

message PredUpdateEditChannelMessage {
// default: Message
	TypeMessage Message = 1;
	int32 Pts = 2;
	int32 Pts_count = 3;
}

message PredExportedMessageLink {
	string Link = 1;
}

message PredMessageFwdHeader {
	int32 Flags = 1;
	int32 From_id = 2;
	int32 Date = 3;
	int32 Channel_id = 4;
	int32 Channel_post = 5;
	string Post_author = 6;
}

message PredMessageActionPinMessage {
}

message PredPeerSettings {
	int32 Flags = 1;
// Report_spam	bool // flags.0?true
}

message PredUpdateChannelPinnedMessage {
	int32 Channel_id = 1;
	int32 Id = 2;
}

message PredKeyboardButtonUrl {
	string Text = 1;
	string Url = 2;
}

message PredKeyboardButtonCallback {
	string Text = 1;
	bytes Data = 2;
}

message PredKeyboardButtonRequestPhone {
	string Text = 1;
}

message PredKeyboardButtonRequestGeoLocation {
	string Text = 1;
}

message PredAuthCodeTypeSms {
}

message PredAuthCodeTypeCall {
}

message PredAuthCodeTypeFlashCall {
}

message PredAuthSentCodeTypeApp {
	int32 Length = 1;
}

message PredAuthSentCodeTypeSms {
	int32 Length = 1;
}

message PredAuthSentCodeTypeCall {
	int32 Length = 1;
}

message PredAuthSentCodeTypeFlashCall {
	string Pattern = 1;
}

message PredKeyboardButtonSwitchInline {
	int32 Flags = 1;
// Same_peer	bool // flags.0?true
	string Text = 3;
	string Query = 4;
}

message PredReplyInlineMarkup {
// default: Vector<KeyboardButtonRow>
	repeated TypeKeyboardButtonRow Rows = 1;
}

message PredMessagesBotCallbackAnswer {
	int32 Flags = 1;
// Alert	bool // flags.1?true
// Has_url	bool // flags.3?true
	string Message = 4;
	string Url = 5;
	int32 Cache_time = 6;
}

message PredUpdateBotCallbackQuery {
	int32 Flags = 1;
	int64 Query_id = 2;
	int32 User_id = 3;
// default: Peer
	TypePeer Peer = 4;
	int32 Msg_id = 5;
	int64 Chat_instance = 6;
	bytes Data = 7;
	string Game_short_name = 8;
}

message PredMessagesMessageEditData {
	int32 Flags = 1;
// Caption	bool // flags.0?true
}

message PredUpdateEditMessage {
// default: Message
	TypeMessage Message = 1;
	int32 Pts = 2;
	int32 Pts_count = 3;
}

message PredInputBotInlineMessageMediaGeo {
	int32 Flags = 1;
// default: InputGeoPoint
	TypeInputGeoPoint Geo_point = 2;
// default: ReplyMarkup
	TypeReplyMarkup Reply_markup = 3;// flags.2?ReplyMarkup
}

message PredInputBotInlineMessageMediaVenue {
	int32 Flags = 1;
// default: InputGeoPoint
	TypeInputGeoPoint Geo_point = 2;
	string Title = 3;
	string Address = 4;
	string Provider = 5;
	string Venue_id = 6;
// default: ReplyMarkup
	TypeReplyMarkup Reply_markup = 7;// flags.2?ReplyMarkup
}

message PredInputBotInlineMessageMediaContact {
	int32 Flags = 1;
	string Phone_number = 2;
	string First_name = 3;
	string Last_name = 4;
// default: ReplyMarkup
	TypeReplyMarkup Reply_markup = 5;// flags.2?ReplyMarkup
}

message PredBotInlineMessageMediaGeo {
	int32 Flags = 1;
// default: GeoPoint
	TypeGeoPoint Geo = 2;
// default: ReplyMarkup
	TypeReplyMarkup Reply_markup = 3;// flags.2?ReplyMarkup
}

message PredBotInlineMessageMediaVenue {
	int32 Flags = 1;
// default: GeoPoint
	TypeGeoPoint Geo = 2;
	string Title = 3;
	string Address = 4;
	string Provider = 5;
	string Venue_id = 6;
// default: ReplyMarkup
	TypeReplyMarkup Reply_markup = 7;// flags.2?ReplyMarkup
}

message PredBotInlineMessageMediaContact {
	int32 Flags = 1;
	string Phone_number = 2;
	string First_name = 3;
	string Last_name = 4;
// default: ReplyMarkup
	TypeReplyMarkup Reply_markup = 5;// flags.2?ReplyMarkup
}

message PredInputBotInlineResultPhoto {
	string Id = 1;
	string Type = 2;
// default: InputPhoto
	TypeInputPhoto Photo = 3;
// default: InputBotInlineMessage
	TypeInputBotInlineMessage Send_message = 4;
}

message PredInputBotInlineResultDocument {
	int32 Flags = 1;
	string Id = 2;
	string Type = 3;
	string Title = 4;
	string Description = 5;
// default: InputDocument
	TypeInputDocument Document = 6;
// default: InputBotInlineMessage
	TypeInputBotInlineMessage Send_message = 7;
}

message PredBotInlineMediaResult {
	int32 Flags = 1;
	string Id = 2;
	string Type = 3;
// default: Photo
	TypePhoto Photo = 4;// flags.0?Photo
// default: Document
	TypeDocument Document = 5;// flags.1?Document
	string Title = 6;
	string Description = 7;
// default: BotInlineMessage
	TypeBotInlineMessage Send_message = 8;
}

message PredInputBotInlineMessageID {
	int32 Dc_id = 1;
	int64 Id = 2;
	int64 Access_hash = 3;
}

message PredUpdateInlineBotCallbackQuery {
	int32 Flags = 1;
	int64 Query_id = 2;
	int32 User_id = 3;
// default: InputBotInlineMessageID
	TypeInputBotInlineMessageID Msg_id = 4;
	int64 Chat_instance = 5;
	bytes Data = 6;
	string Game_short_name = 7;
}

message PredInlineBotSwitchPM {
	string Text = 1;
	string Start_param = 2;
}

message PredMessageEntityMentionName {
	int32 Offset = 1;
	int32 Length = 2;
	int32 User_id = 3;
}

message PredInputMessageEntityMentionName {
	int32 Offset = 1;
	int32 Length = 2;
// default: InputUser
	TypeInputUser User_id = 3;
}

message PredMessagesPeerDialogs {
// default: Vector<Dialog>
	repeated TypeDialog Dialogs = 1;
// default: Vector<Message>
	repeated TypeMessage Messages = 2;
// default: Vector<Chat>
	repeated TypeChat Chats = 3;
// default: Vector<User>
	repeated TypeUser Users = 4;
// default: updatesState
	TypeUpdatesState State = 5;
}

message PredTopPeer {
// default: Peer
	TypePeer Peer = 1;
	double Rating = 2;
}

message PredTopPeerCategoryBotsPM {
}

message PredTopPeerCategoryBotsInline {
}

message PredTopPeerCategoryCorrespondents {
}

message PredTopPeerCategoryGroups {
}

message PredTopPeerCategoryChannels {
}

message PredTopPeerCategoryPeers {
// default: TopPeerCategory
	TypeTopPeerCategory Category = 1;
	int32 Count = 2;
// default: Vector<TopPeer>
	repeated TypeTopPeer Peers = 3;
}

message PredContactsTopPeersNotModified {
}

message PredContactsTopPeers {
// default: Vector<TopPeerCategoryPeers>
	repeated TypeTopPeerCategoryPeers Categories = 1;
// default: Vector<Chat>
	repeated TypeChat Chats = 2;
// default: Vector<User>
	repeated TypeUser Users = 3;
}

message PredInputMessagesFilterChatPhotos {
}

message PredUpdateReadChannelOutbox {
	int32 Channel_id = 1;
	int32 Max_id = 2;
}

message PredUpdateDraftMessage {
// default: Peer
	TypePeer Peer = 1;
// default: DraftMessage
	TypeDraftMessage Draft = 2;
}

message PredDraftMessageEmpty {
}

message PredDraftMessage {
	int32 Flags = 1;
// No_webpage	bool // flags.1?true
	int32 Reply_to_msg_id = 3;
	string Message = 4;
// default: Vector<MessageEntity>
	repeated TypeMessageEntity Entities = 5;// flags.3?Vector<MessageEntity>
	int32 Date = 6;
}

message PredMessageActionHistoryClear {
}

message PredUpdateReadFeaturedStickers {
}

message PredUpdateRecentStickers {
}

message PredMessagesFeaturedStickersNotModified {
}

message PredMessagesFeaturedStickers {
	int32 Hash = 1;
// default: Vector<StickerSetCovered>
	repeated TypeStickerSetCovered Sets = 2;
	repeated int64 Unread = 3;
}

message PredMessagesRecentStickersNotModified {
}

message PredMessagesRecentStickers {
	int32 Hash = 1;
// default: Vector<Document>
	repeated TypeDocument Stickers = 2;
}

message PredMessagesArchivedStickers {
	int32 Count = 1;
// default: Vector<StickerSetCovered>
	repeated TypeStickerSetCovered Sets = 2;
}

message PredMessagesStickerSetInstallResultSuccess {
}

message PredMessagesStickerSetInstallResultArchive {
// default: Vector<StickerSetCovered>
	repeated TypeStickerSetCovered Sets = 1;
}

message PredStickerSetCovered {
// default: StickerSet
	TypeStickerSet Set = 1;
// default: Document
	TypeDocument Cover = 2;
}

message PredInputMediaPhotoExternal {
	int32 Flags = 1;
	string Url = 2;
	string Caption = 3;
	int32 Ttl_seconds = 4;
}

message PredInputMediaDocumentExternal {
	int32 Flags = 1;
	string Url = 2;
	string Caption = 3;
	int32 Ttl_seconds = 4;
}

message PredUpdateConfig {
}

message PredUpdatePtsChanged {
}

message PredMessageActionGameScore {
	int64 Game_id = 1;
	int32 Score = 2;
}

message PredDocumentAttributeHasStickers {
}

message PredKeyboardButtonGame {
	string Text = 1;
}

message PredStickerSetMultiCovered {
// default: StickerSet
	TypeStickerSet Set = 1;
// default: Vector<Document>
	repeated TypeDocument Covers = 2;
}

message PredMaskCoords {
	int32 N = 1;
	double X = 2;
	double Y = 3;
	double Zoom = 4;
}

message PredInputStickeredMediaPhoto {
// default: InputPhoto
	TypeInputPhoto Id = 1;
}

message PredInputStickeredMediaDocument {
// default: InputDocument
	TypeInputDocument Id = 1;
}

message PredInputMediaGame {
// default: InputGame
	TypeInputGame Id = 1;
}

message PredMessageMediaGame {
// default: Game
	TypeGame Game = 1;
}

message PredInputBotInlineMessageGame {
	int32 Flags = 1;
// default: ReplyMarkup
	TypeReplyMarkup Reply_markup = 2;// flags.2?ReplyMarkup
}

message PredInputBotInlineResultGame {
	string Id = 1;
	string Short_name = 2;
// default: InputBotInlineMessage
	TypeInputBotInlineMessage Send_message = 3;
}

message PredGame {
	int32 Flags = 1;
	int64 Id = 2;
	int64 Access_hash = 3;
	string Short_name = 4;
	string Title = 5;
	string Description = 6;
// default: Photo
	TypePhoto Photo = 7;
// default: Document
	TypeDocument Document = 8;// flags.0?Document
}

message PredInputGameID {
	int64 Id = 1;
	int64 Access_hash = 2;
}

message PredInputGameShortName {
// default: InputUser
	TypeInputUser Bot_id = 1;
	string Short_name = 2;
}

message PredHighScore {
	int32 Pos = 1;
	int32 User_id = 2;
	int32 Score = 3;
}

message PredMessagesHighScores {
// default: Vector<HighScore>
	repeated TypeHighScore Scores = 1;
// default: Vector<User>
	repeated TypeUser Users = 2;
}

message PredMessagesChatsSlice {
	int32 Count = 1;
// default: Vector<Chat>
	repeated TypeChat Chats = 2;
}

message PredUpdateChannelWebPage {
	int32 Channel_id = 1;
// default: WebPage
	TypeWebPage Webpage = 2;
	int32 Pts = 3;
	int32 Pts_count = 4;
}

message PredUpdatesDifferenceTooLong {
	int32 Pts = 1;
}

message PredSendMessageGamePlayAction {
}

message PredWebPageNotModified {
}

message PredTextEmpty {
}

message PredTextPlain {
	string Text = 1;
}

message PredTextBold {
// default: RichText
	TypeRichText Text = 1;
}

message PredTextItalic {
// default: RichText
	TypeRichText Text = 1;
}

message PredTextUnderline {
// default: RichText
	TypeRichText Text = 1;
}

message PredTextStrike {
// default: RichText
	TypeRichText Text = 1;
}

message PredTextFixed {
// default: RichText
	TypeRichText Text = 1;
}

message PredTextUrl {
// default: RichText
	TypeRichText Text = 1;
	string Url = 2;
	int64 Webpage_id = 3;
}

message PredTextEmail {
// default: RichText
	TypeRichText Text = 1;
	string Email = 2;
}

message PredTextConcat {
// default: Vector<RichText>
	repeated TypeRichText Texts = 1;
}

message PredPageBlockTitle {
// default: RichText
	TypeRichText Text = 1;
}

message PredPageBlockSubtitle {
// default: RichText
	TypeRichText Text = 1;
}

message PredPageBlockAuthorDate {
// default: RichText
	TypeRichText Author = 1;
	int32 Published_date = 2;
}

message PredPageBlockHeader {
// default: RichText
	TypeRichText Text = 1;
}

message PredPageBlockSubheader {
// default: RichText
	TypeRichText Text = 1;
}

message PredPageBlockParagraph {
// default: RichText
	TypeRichText Text = 1;
}

message PredPageBlockPreformatted {
// default: RichText
	TypeRichText Text = 1;
	string Language = 2;
}

message PredPageBlockFooter {
// default: RichText
	TypeRichText Text = 1;
}

message PredPageBlockDivider {
}

message PredPageBlockList {
// default: Bool
	TypeBool Ordered = 1;
// default: Vector<RichText>
	repeated TypeRichText Items = 2;
}

message PredPageBlockBlockquote {
// default: RichText
	TypeRichText Text = 1;
// default: RichText
	TypeRichText Caption = 2;
}

message PredPageBlockPullquote {
// default: RichText
	TypeRichText Text = 1;
// default: RichText
	TypeRichText Caption = 2;
}

message PredPageBlockPhoto {
	int64 Photo_id = 1;
// default: RichText
	TypeRichText Caption = 2;
}

message PredPageBlockVideo {
	int32 Flags = 1;
// Autoplay	bool // flags.0?true
// Loop	bool // flags.1?true
	int64 Video_id = 4;
// default: RichText
	TypeRichText Caption = 5;
}

message PredPageBlockCover {
// default: PageBlock
	TypePageBlock Cover = 1;
}

message PredPageBlockEmbed {
	int32 Flags = 1;
// Full_width	bool // flags.0?true
// Allow_scrolling	bool // flags.3?true
	string Url = 4;
	string Html = 5;
	int64 Poster_photo_id = 6;
	int32 W = 7;
	int32 H = 8;
// default: RichText
	TypeRichText Caption = 9;
}

message PredPageBlockEmbedPost {
	string Url = 1;
	int64 Webpage_id = 2;
	int64 Author_photo_id = 3;
	string Author = 4;
	int32 Date = 5;
// default: Vector<PageBlock>
	repeated TypePageBlock Blocks = 6;
// default: RichText
	TypeRichText Caption = 7;
}

message PredPageBlockSlideshow {
// default: Vector<PageBlock>
	repeated TypePageBlock Items = 1;
// default: RichText
	TypeRichText Caption = 2;
}

message PredPagePart {
// default: Vector<PageBlock>
	repeated TypePageBlock Blocks = 1;
// default: Vector<Photo>
	repeated TypePhoto Photos = 2;
// default: Vector<Document>
	repeated TypeDocument Documents = 3;
}

message PredPageFull {
// default: Vector<PageBlock>
	repeated TypePageBlock Blocks = 1;
// default: Vector<Photo>
	repeated TypePhoto Photos = 2;
// default: Vector<Document>
	repeated TypeDocument Documents = 3;
}

message PredUpdatePhoneCall {
// default: PhoneCall
	TypePhoneCall Phone_call = 1;
}

message PredUpdateDialogPinned {
	int32 Flags = 1;
// Pinned	bool // flags.0?true
// default: Peer
	TypePeer Peer = 3;
}

message PredUpdatePinnedDialogs {
	int32 Flags = 1;
// default: Vector<Peer>
	repeated TypePeer Order = 2;// flags.0?Vector<Peer>
}

message PredInputPrivacyKeyPhoneCall {
}

message PredPrivacyKeyPhoneCall {
}

message PredPageBlockUnsupported {
}

message PredPageBlockAnchor {
	string Name = 1;
}

message PredPageBlockCollage {
// default: Vector<PageBlock>
	repeated TypePageBlock Items = 1;
// default: RichText
	TypeRichText Caption = 2;
}

message PredInputPhoneCall {
	int64 Id = 1;
	int64 Access_hash = 2;
}

message PredPhoneCallEmpty {
	int64 Id = 1;
}

message PredPhoneCallWaiting {
	int32 Flags = 1;
	int64 Id = 2;
	int64 Access_hash = 3;
	int32 Date = 4;
	int32 Admin_id = 5;
	int32 Participant_id = 6;
// default: PhoneCallProtocol
	TypePhoneCallProtocol Protocol = 7;
	int32 Receive_date = 8;
}

message PredPhoneCallRequested {
	int64 Id = 1;
	int64 Access_hash = 2;
	int32 Date = 3;
	int32 Admin_id = 4;
	int32 Participant_id = 5;
	bytes G_a_hash = 6;
// default: PhoneCallProtocol
	TypePhoneCallProtocol Protocol = 7;
}

message PredPhoneCall {
	int64 Id = 1;
	int64 Access_hash = 2;
	int32 Date = 3;
	int32 Admin_id = 4;
	int32 Participant_id = 5;
	bytes G_a_or_b = 6;
	int64 Key_fingerprint = 7;
// default: PhoneCallProtocol
	TypePhoneCallProtocol Protocol = 8;
// default: PhoneConnection
	TypePhoneConnection Connection = 9;
// default: Vector<PhoneConnection>
	repeated TypePhoneConnection Alternative_connections = 10;
	int32 Start_date = 11;
}

message PredPhoneCallDiscarded {
	int32 Flags = 1;
// Need_rating	bool // flags.2?true
// Need_debug	bool // flags.3?true
	int64 Id = 4;
// default: PhoneCallDiscardReason
	TypePhoneCallDiscardReason Reason = 5;// flags.0?PhoneCallDiscardReason
	int32 Duration = 6;
}

message PredPhoneConnection {
	int64 Id = 1;
	string Ip = 2;
	string Ipv6 = 3;
	int32 Port = 4;
	bytes Peer_tag = 5;
}

message PredPhoneCallProtocol {
	int32 Flags = 1;
// Udp_p2p	bool // flags.0?true
// Udp_reflector	bool // flags.1?true
	int32 Min_layer = 4;
	int32 Max_layer = 5;
}

message PredPhonePhoneCall {
// default: PhoneCall
	TypePhoneCall Phone_call = 1;
// default: Vector<User>
	repeated TypeUser Users = 2;
}

message PredPhoneCallDiscardReasonMissed {
}

message PredPhoneCallDiscardReasonDisconnect {
}

message PredPhoneCallDiscardReasonHangup {
}

message PredPhoneCallDiscardReasonBusy {
}

message PredInputMessagesFilterPhoneCalls {
	int32 Flags = 1;
// Missed	bool // flags.0?true
}

message PredMessageActionPhoneCall {
	int32 Flags = 1;
	int64 Call_id = 2;
// default: PhoneCallDiscardReason
	TypePhoneCallDiscardReason Reason = 3;// flags.0?PhoneCallDiscardReason
	int32 Duration = 4;
}

message PredInvoice {
	int32 Flags = 1;
// Test	bool // flags.0?true
// Name_requested	bool // flags.1?true
// Phone_requested	bool // flags.2?true
// Email_requested	bool // flags.3?true
// Shipping_address_requested	bool // flags.4?true
// Flexible	bool // flags.5?true
	string Currency = 8;
// default: Vector<LabeledPrice>
	repeated TypeLabeledPrice Prices = 9;
}

message PredInputMediaInvoice {
	int32 Flags = 1;
	string Title = 2;
	string Description = 3;
// default: InputWebDocument
	TypeInputWebDocument Photo = 4;// flags.0?InputWebDocument
// default: Invoice
	TypeInvoice Invoice = 5;
	bytes Payload = 6;
	string Provider = 7;
	string Start_param = 8;
}

message PredMessageActionPaymentSentMe {
	int32 Flags = 1;
	string Currency = 2;
	int64 Total_amount = 3;
	bytes Payload = 4;
// default: PaymentRequestedInfo
	TypePaymentRequestedInfo Info = 5;// flags.0?PaymentRequestedInfo
	string Shipping_option_id = 6;
// default: PaymentCharge
	TypePaymentCharge Charge = 7;
}

message PredMessageMediaInvoice {
	int32 Flags = 1;
// Shipping_address_requested	bool // flags.1?true
// Test	bool // flags.3?true
	string Title = 4;
	string Description = 5;
// default: WebDocument
	TypeWebDocument Photo = 6;// flags.0?WebDocument
	int32 Receipt_msg_id = 7;
	string Currency = 8;
	int64 Total_amount = 9;
	string Start_param = 10;
}

message PredKeyboardButtonBuy {
	string Text = 1;
}

message PredMessageActionPaymentSent {
	string Currency = 1;
	int64 Total_amount = 2;
}

message PredPaymentsPaymentForm {
	int32 Flags = 1;
// Can_save_credentials	bool // flags.2?true
// Password_missing	bool // flags.3?true
	int32 Bot_id = 4;
// default: Invoice
	TypeInvoice Invoice = 5;
	int32 Provider_id = 6;
	string Url = 7;
	string Native_provider = 8;
// default: DataJSON
	TypeDataJSON Native_params = 9;// flags.4?DataJSON
// default: PaymentRequestedInfo
	TypePaymentRequestedInfo Saved_info = 10;// flags.0?PaymentRequestedInfo
// default: PaymentSavedCredentials
	TypePaymentSavedCredentials Saved_credentials = 11;// flags.1?PaymentSavedCredentials
// default: Vector<User>
	repeated TypeUser Users = 12;
}

message PredPostAddress {
	string Street_line1 = 1;
	string Street_line2 = 2;
	string City = 3;
	string State = 4;
	string Country_iso2 = 5;
	string Post_code = 6;
}

message PredPaymentRequestedInfo {
	int32 Flags = 1;
	string Name = 2;
	string Phone = 3;
	string Email = 4;
// default: PostAddress
	TypePostAddress Shipping_address = 5;// flags.3?PostAddress
}

message PredUpdateBotWebhookJSON {
// default: DataJSON
	TypeDataJSON Data = 1;
}

message PredUpdateBotWebhookJSONQuery {
	int64 Query_id = 1;
// default: DataJSON
	TypeDataJSON Data = 2;
	int32 Timeout = 3;
}

message PredUpdateBotShippingQuery {
	int64 Query_id = 1;
	int32 User_id = 2;
	bytes Payload = 3;
// default: PostAddress
	TypePostAddress Shipping_address = 4;
}

message PredUpdateBotPrecheckoutQuery {
	int32 Flags = 1;
	int64 Query_id = 2;
	int32 User_id = 3;
	bytes Payload = 4;
// default: PaymentRequestedInfo
	TypePaymentRequestedInfo Info = 5;// flags.0?PaymentRequestedInfo
	string Shipping_option_id = 6;
	string Currency = 7;
	int64 Total_amount = 8;
}

message PredDataJSON {
	string Data = 1;
}

message PredLabeledPrice {
	string Label = 1;
	int64 Amount = 2;
}

message PredPaymentCharge {
	string Id = 1;
	string Provider_charge_id = 2;
}

message PredPaymentSavedCredentialsCard {
	string Id = 1;
	string Title = 2;
}

message PredWebDocument {
	string Url = 1;
	int64 Access_hash = 2;
	int32 Size = 3;
	string Mime_type = 4;
// default: Vector<DocumentAttribute>
	repeated TypeDocumentAttribute Attributes = 5;
	int32 Dc_id = 6;
}

message PredInputWebDocument {
	string Url = 1;
	int32 Size = 2;
	string Mime_type = 3;
// default: Vector<DocumentAttribute>
	repeated TypeDocumentAttribute Attributes = 4;
}

message PredInputWebFileLocation {
	string Url = 1;
	int64 Access_hash = 2;
}

message PredUploadWebFile {
	int32 Size = 1;
	string Mime_type = 2;
// default: storageFileType
	TypeStorageFileType File_type = 3;
	int32 Mtime = 4;
	bytes Bytes = 5;
}

message PredPaymentsValidatedRequestedInfo {
	int32 Flags = 1;
	string Id = 2;
// default: Vector<ShippingOption>
	repeated TypeShippingOption Shipping_options = 3;// flags.1?Vector<ShippingOption>
}

message PredPaymentsPaymentResult {
// default: Updates
	TypeUpdates Updates = 1;
}

message PredPaymentsPaymentVerficationNeeded {
	string Url = 1;
}

message PredPaymentsPaymentReceipt {
	int32 Flags = 1;
	int32 Date = 2;
	int32 Bot_id = 3;
// default: Invoice
	TypeInvoice Invoice = 4;
	int32 Provider_id = 5;
// default: PaymentRequestedInfo
	TypePaymentRequestedInfo Info = 6;// flags.0?PaymentRequestedInfo
// default: ShippingOption
	TypeShippingOption Shipping = 7;// flags.1?ShippingOption
	string Currency = 8;
	int64 Total_amount = 9;
	string Credentials_title = 10;
// default: Vector<User>
	repeated TypeUser Users = 11;
}

message PredPaymentsSavedInfo {
	int32 Flags = 1;
// Has_saved_credentials	bool // flags.1?true
// default: PaymentRequestedInfo
	TypePaymentRequestedInfo Saved_info = 3;// flags.0?PaymentRequestedInfo
}

message PredInputPaymentCredentialsSaved {
	string Id = 1;
	bytes Tmp_password = 2;
}

message PredInputPaymentCredentials {
	int32 Flags = 1;
// Save	bool // flags.0?true
// default: DataJSON
	TypeDataJSON Data = 3;
}

message PredAccountTmpPassword {
	bytes Tmp_password = 1;
	int32 Valid_until = 2;
}

message PredShippingOption {
	string Id = 1;
	string Title = 2;
// default: Vector<LabeledPrice>
	repeated TypeLabeledPrice Prices = 3;
}

message PredPhoneCallAccepted {
	int64 Id = 1;
	int64 Access_hash = 2;
	int32 Date = 3;
	int32 Admin_id = 4;
	int32 Participant_id = 5;
	bytes G_b = 6;
// default: PhoneCallProtocol
	TypePhoneCallProtocol Protocol = 7;
}

message PredInputMessagesFilterRoundVoice {
}

message PredInputMessagesFilterRoundVideo {
}

message PredUploadFileCdnRedirect {
	int32 Dc_id = 1;
	bytes File_token = 2;
	bytes Encryption_key = 3;
	bytes Encryption_iv = 4;
// default: Vector<CdnFileHash>
	repeated TypeCdnFileHash Cdn_file_hashes = 5;
}

message PredSendMessageRecordRoundAction {
}

message PredSendMessageUploadRoundAction {
	int32 Progress = 1;
}

message PredUploadCdnFileReuploadNeeded {
	bytes Request_token = 1;
}

message PredUploadCdnFile {
	bytes Bytes = 1;
}

message PredCdnPublicKey {
	int32 Dc_id = 1;
	string Public_key = 2;
}

message PredCdnConfig {
// default: Vector<CdnPublicKey>
	repeated TypeCdnPublicKey Public_keys = 1;
}

message PredUpdateLangPackTooLong {
}

message PredUpdateLangPack {
// default: LangPackDifference
	TypeLangPackDifference Difference = 1;
}

message PredPageBlockChannel {
// default: Chat
	TypeChat Channel = 1;
}

message PredInputStickerSetItem {
	int32 Flags = 1;
// default: InputDocument
	TypeInputDocument Document = 2;
	string Emoji = 3;
// default: MaskCoords
	TypeMaskCoords Mask_coords = 4;// flags.0?MaskCoords
}

message PredLangPackString {
	string Key = 1;
	string Value = 2;
}

message PredLangPackStringPluralized {
	int32 Flags = 1;
	string Key = 2;
	string Zero_value = 3;
	string One_value = 4;
	string Two_value = 5;
	string Few_value = 6;
	string Many_value = 7;
	string Other_value = 8;
}

message PredLangPackStringDeleted {
	string Key = 1;
}

message PredLangPackDifference {
	string Lang_code = 1;
	int32 From_version = 2;
	int32 Version = 3;
// default: Vector<LangPackString>
	repeated TypeLangPackString Strings = 4;
}

message PredLangPackLanguage {
	string Name = 1;
	string Native_name = 2;
	string Lang_code = 3;
}

message PredChannelParticipantAdmin {
	int32 Flags = 1;
// Can_edit	bool // flags.0?true
	int32 User_id = 3;
	int32 Inviter_id = 4;
	int32 Promoted_by = 5;
	int32 Date = 6;
// default: ChannelAdminRights
	TypeChannelAdminRights Admin_rights = 7;
}

message PredChannelParticipantBanned {
	int32 Flags = 1;
// Left	bool // flags.0?true
	int32 User_id = 3;
	int32 Kicked_by = 4;
	int32 Date = 5;
// default: ChannelBannedRights
	TypeChannelBannedRights Banned_rights = 6;
}

message PredChannelParticipantsBanned {
	string Q = 1;
}

message PredChannelParticipantsSearch {
	string Q = 1;
}

message PredTopPeerCategoryPhoneCalls {
}

message PredPageBlockAudio {
	int64 Audio_id = 1;
// default: RichText
	TypeRichText Caption = 2;
}

message PredChannelAdminRights {
	int32 Flags = 1;
// Change_info	bool // flags.0?true
// Post_messages	bool // flags.1?true
// Edit_messages	bool // flags.2?true
// Delete_messages	bool // flags.3?true
// Ban_users	bool // flags.4?true
// Invite_users	bool // flags.5?true
// Invite_link	bool // flags.6?true
// Pin_messages	bool // flags.7?true
// Add_admins	bool // flags.9?true
}

message PredChannelBannedRights {
	int32 Flags = 1;
// View_messages	bool // flags.0?true
// Send_messages	bool // flags.1?true
// Send_media	bool // flags.2?true
// Send_stickers	bool // flags.3?true
// Send_gifs	bool // flags.4?true
// Send_games	bool // flags.5?true
// Send_inline	bool // flags.6?true
// Embed_links	bool // flags.7?true
	int32 Until_date = 10;
}

message PredChannelAdminLogEventActionChangeTitle {
	string Prev_value = 1;
	string New_value = 2;
}

message PredChannelAdminLogEventActionChangeAbout {
	string Prev_value = 1;
	string New_value = 2;
}

message PredChannelAdminLogEventActionChangeUsername {
	string Prev_value = 1;
	string New_value = 2;
}

message PredChannelAdminLogEventActionChangePhoto {
// default: ChatPhoto
	TypeChatPhoto Prev_photo = 1;
// default: ChatPhoto
	TypeChatPhoto New_photo = 2;
}

message PredChannelAdminLogEventActionToggleInvites {
// default: Bool
	TypeBool New_value = 1;
}

message PredChannelAdminLogEventActionToggleSignatures {
// default: Bool
	TypeBool New_value = 1;
}

message PredChannelAdminLogEventActionUpdatePinned {
// default: Message
	TypeMessage Message = 1;
}

message PredChannelAdminLogEventActionEditMessage {
// default: Message
	TypeMessage Prev_message = 1;
// default: Message
	TypeMessage New_message = 2;
}

message PredChannelAdminLogEventActionDeleteMessage {
// default: Message
	TypeMessage Message = 1;
}

message PredChannelAdminLogEventActionParticipantJoin {
}

message PredChannelAdminLogEventActionParticipantLeave {
}

message PredChannelAdminLogEventActionParticipantInvite {
// default: ChannelParticipant
	TypeChannelParticipant Participant = 1;
}

message PredChannelAdminLogEventActionParticipantToggleBan {
// default: ChannelParticipant
	TypeChannelParticipant Prev_participant = 1;
// default: ChannelParticipant
	TypeChannelParticipant New_participant = 2;
}

message PredChannelAdminLogEventActionParticipantToggleAdmin {
// default: ChannelParticipant
	TypeChannelParticipant Prev_participant = 1;
// default: ChannelParticipant
	TypeChannelParticipant New_participant = 2;
}

message PredChannelAdminLogEvent {
	int64 Id = 1;
	int32 Date = 2;
	int32 User_id = 3;
// default: ChannelAdminLogEventAction
	TypeChannelAdminLogEventAction Action = 4;
}

message PredChannelsAdminLogResults {
// default: Vector<ChannelAdminLogEvent>
	repeated TypeChannelAdminLogEvent Events = 1;
// default: Vector<Chat>
	repeated TypeChat Chats = 2;
// default: Vector<User>
	repeated TypeUser Users = 3;
}

message PredChannelAdminLogEventsFilter {
	int32 Flags = 1;
// Join	bool // flags.0?true
// Leave	bool // flags.1?true
// Invite	bool // flags.2?true
// Ban	bool // flags.3?true
// Unban	bool // flags.4?true
// Kick	bool // flags.5?true
// Unkick	bool // flags.6?true
// Promote	bool // flags.7?true
// Demote	bool // flags.8?true
// Info	bool // flags.9?true
// Settings	bool // flags.10?true
// Pinned	bool // flags.11?true
// Edit	bool // flags.12?true
// Delete	bool // flags.13?true
}

message PredMessageActionScreenshotTaken {
}

message PredPopularContact {
	int64 Client_id = 1;
	int32 Importers = 2;
}

message PredCdnFileHash {
	int32 Offset = 1;
	int32 Limit = 2;
	bytes Hash = 3;
}

message PredInputMessagesFilterMyMentions {
}

message PredInputMessagesFilterMyMentionsUnread {
}

message PredUpdateContactsReset {
}

message PredChannelAdminLogEventActionChangeStickerSet {
// default: InputStickerSet
	TypeInputStickerSet Prev_stickerset = 1;
// default: InputStickerSet
	TypeInputStickerSet New_stickerset = 2;
}

message PredUpdateFavedStickers {
}

message PredMessagesFavedStickers {
	int32 Hash = 1;
// default: Vector<StickerPack>
	repeated TypeStickerPack Packs = 2;
// default: Vector<Document>
	repeated TypeDocument Stickers = 3;
}

message PredMessagesFavedStickersNotModified {
}

message PredUpdateChannelReadMessagesContents {
	int32 Channel_id = 1;
	repeated int32 Messages = 2;
}



// Requests
message ReqInvokeAfterMsg {
	int64 Msg_id = 1;
	google.protobuf.Any Query = 2;
}

message ReqInvokeAfterMsgs {
	repeated int64 Msg_ids = 1;
	google.protobuf.Any Query = 2;
}

message ReqAuthCheckPhone {
	string Phone_number = 1;
}

message ReqAuthSendCode {
	int32 Flags = 1;
// Allow_flashcall	bool // flags.0?true
	string Phone_number = 3;
// default: Bool
	TypeBool Current_number = 4;// flags.0?Bool
	int32 Api_id = 5;
	string Api_hash = 6;
}

message ReqAuthSignUp {
	string Phone_number = 1;
	string Phone_code_hash = 2;
	string Phone_code = 3;
	string First_name = 4;
	string Last_name = 5;
}

message ReqAuthSignIn {
	string Phone_number = 1;
	string Phone_code_hash = 2;
	string Phone_code = 3;
}

message ReqAuthLogOut {
}

message ReqAuthResetAuthorizations {
}

message ReqAuthSendInvites {
	repeated string Phone_numbers = 1;
	string Message = 2;
}

message ReqAuthExportAuthorization {
	int32 Dc_id = 1;
}

message ReqAuthImportAuthorization {
	int32 Id = 1;
	bytes Bytes = 2;
}

message ReqAccountRegisterDevice {
	int32 Token_type = 1;
	string Token = 2;
}

message ReqAccountUnregisterDevice {
	int32 Token_type = 1;
	string Token = 2;
}

message ReqAccountUpdateNotifySettings {
// default: InputNotifyPeer
	TypeInputNotifyPeer Peer = 1;
// default: InputPeerNotifySettings
	TypeInputPeerNotifySettings Settings = 2;
}

message ReqAccountGetNotifySettings {
// default: InputNotifyPeer
	TypeInputNotifyPeer Peer = 1;
}

message ReqAccountResetNotifySettings {
}

message ReqAccountUpdateProfile {
	int32 Flags = 1;
	string First_name = 2;
	string Last_name = 3;
	string About = 4;
}

message ReqAccountUpdateStatus {
// default: Bool
	TypeBool Offline = 1;
}

message ReqAccountGetWallPapers {
}

message ReqUsersGetUsers {
// default: Vector<InputUser>
	repeated TypeInputUser Id = 1;
}

message ReqUsersGetFullUser {
// default: InputUser
	TypeInputUser Id = 1;
}

message ReqContactsGetStatuses {
}

message ReqContactsGetContacts {
	int32 Hash = 1;
}

message ReqContactsImportContacts {
// default: Vector<InputContact>
	repeated TypeInputContact Contacts = 1;
}

message ReqContactsSearch {
	string Q = 1;
	int32 Limit = 2;
}

message ReqContactsDeleteContact {
// default: InputUser
	TypeInputUser Id = 1;
}

message ReqContactsDeleteContacts {
// default: Vector<InputUser>
	repeated TypeInputUser Id = 1;
}

message ReqContactsBlock {
// default: InputUser
	TypeInputUser Id = 1;
}

message ReqContactsUnblock {
// default: InputUser
	TypeInputUser Id = 1;
}

message ReqContactsGetBlocked {
	int32 Offset = 1;
	int32 Limit = 2;
}

message ReqMessagesGetMessages {
	repeated int32 Id = 1;
}

message ReqMessagesGetDialogs {
	int32 Flags = 1;
// Exclude_pinned	bool // flags.0?true
	int32 Offset_date = 3;
	int32 Offset_id = 4;
// default: InputPeer
	TypeInputPeer Offset_peer = 5;
	int32 Limit = 6;
}

message ReqMessagesGetHistory {
// default: InputPeer
	TypeInputPeer Peer = 1;
	int32 Offset_id = 2;
	int32 Offset_date = 3;
	int32 Add_offset = 4;
	int32 Limit = 5;
	int32 Max_id = 6;
	int32 Min_id = 7;
}

message ReqMessagesSearch {
	int32 Flags = 1;
// default: InputPeer
	TypeInputPeer Peer = 2;
	string Q = 3;
// default: InputUser
	TypeInputUser From_id = 4;// flags.0?InputUser
// default: MessagesFilter
	TypeMessagesFilter Filter = 5;
	int32 Min_date = 6;
	int32 Max_date = 7;
	int32 Offset_id = 8;
	int32 Add_offset = 9;
	int32 Limit = 10;
	int32 Max_id = 11;
	int32 Min_id = 12;
}

message ReqMessagesReadHistory {
// default: InputPeer
	TypeInputPeer Peer = 1;
	int32 Max_id = 2;
}

message ReqMessagesDeleteHistory {
	int32 Flags = 1;
// Just_clear	bool // flags.0?true
// default: InputPeer
	TypeInputPeer Peer = 3;
	int32 Max_id = 4;
}

message ReqMessagesDeleteMessages {
	int32 Flags = 1;
// Revoke	bool // flags.0?true
	repeated int32 Id = 3;
}

message ReqMessagesReceivedMessages {
	int32 Max_id = 1;
}

message ReqMessagesSetTyping {
// default: InputPeer
	TypeInputPeer Peer = 1;
// default: SendMessageAction
	TypeSendMessageAction Action = 2;
}

message ReqMessagesSendMessage {
	int32 Flags = 1;
// No_webpage	bool // flags.1?true
// Silent	bool // flags.5?true
// Background	bool // flags.6?true
// Clear_draft	bool // flags.7?true
// default: InputPeer
	TypeInputPeer Peer = 6;
	int32 Reply_to_msg_id = 7;
	string Message = 8;
	int64 Random_id = 9;
// default: ReplyMarkup
	TypeReplyMarkup Reply_markup = 10;// flags.2?ReplyMarkup
// default: Vector<MessageEntity>
	repeated TypeMessageEntity Entities = 11;// flags.3?Vector<MessageEntity>
}

message ReqMessagesSendMedia {
	int32 Flags = 1;
// Silent	bool // flags.5?true
// Background	bool // flags.6?true
// Clear_draft	bool // flags.7?true
// default: InputPeer
	TypeInputPeer Peer = 5;
	int32 Reply_to_msg_id = 6;
// default: InputMedia
	TypeInputMedia Media = 7;
	int64 Random_id = 8;
// default: ReplyMarkup
	TypeReplyMarkup Reply_markup = 9;// flags.2?ReplyMarkup
}

message ReqMessagesForwardMessages {
	int32 Flags = 1;
// Silent	bool // flags.5?true
// Background	bool // flags.6?true
// With_my_score	bool // flags.8?true
// default: InputPeer
	TypeInputPeer From_peer = 5;
	repeated int32 Id = 6;
	repeated int64 Random_id = 7;
// default: InputPeer
	TypeInputPeer To_peer = 8;
}

message ReqMessagesGetChats {
	repeated int32 Id = 1;
}

message ReqMessagesGetFullChat {
	int32 Chat_id = 1;
}

message ReqMessagesEditChatTitle {
	int32 Chat_id = 1;
	string Title = 2;
}

message ReqMessagesEditChatPhoto {
	int32 Chat_id = 1;
// default: InputChatPhoto
	TypeInputChatPhoto Photo = 2;
}

message ReqMessagesAddChatUser {
	int32 Chat_id = 1;
// default: InputUser
	TypeInputUser User_id = 2;
	int32 Fwd_limit = 3;
}

message ReqMessagesDeleteChatUser {
	int32 Chat_id = 1;
// default: InputUser
	TypeInputUser User_id = 2;
}

message ReqMessagesCreateChat {
// default: Vector<InputUser>
	repeated TypeInputUser Users = 1;
	string Title = 2;
}

message ReqUpdatesGetState {
}

message ReqUpdatesGetDifference {
	int32 Flags = 1;
	int32 Pts = 2;
	int32 Pts_total_limit = 3;
	int32 Date = 4;
	int32 Qts = 5;
}

message ReqPhotosUpdateProfilePhoto {
// default: InputPhoto
	TypeInputPhoto Id = 1;
}

message ReqPhotosUploadProfilePhoto {
// default: InputFile
	TypeInputFile File = 1;
}

message ReqUploadSaveFilePart {
	int64 File_id = 1;
	int32 File_part = 2;
	bytes Bytes = 3;
}

message ReqUploadGetFile {
// default: InputFileLocation
	TypeInputFileLocation Location = 1;
	int32 Offset = 2;
	int32 Limit = 3;
}

message ReqHelpGetConfig {
}

message ReqHelpGetNearestDc {
}

message ReqHelpGetAppUpdate {
}

message ReqHelpSaveAppLog {
// default: Vector<InputAppEvent>
	repeated TypeInputAppEvent Events = 1;
}

message ReqHelpGetInviteText {
}

message ReqPhotosDeletePhotos {
// default: Vector<InputPhoto>
	repeated TypeInputPhoto Id = 1;
}

message ReqPhotosGetUserPhotos {
// default: InputUser
	TypeInputUser User_id = 1;
	int32 Offset = 2;
	int64 Max_id = 3;
	int32 Limit = 4;
}

message ReqMessagesForwardMessage {
// default: InputPeer
	TypeInputPeer Peer = 1;
	int32 Id = 2;
	int64 Random_id = 3;
}

message ReqMessagesGetDhConfig {
	int32 Version = 1;
	int32 Random_length = 2;
}

message ReqMessagesRequestEncryption {
// default: InputUser
	TypeInputUser User_id = 1;
	int32 Random_id = 2;
	bytes G_a = 3;
}

message ReqMessagesAcceptEncryption {
// default: InputEncryptedChat
	TypeInputEncryptedChat Peer = 1;
	bytes G_b = 2;
	int64 Key_fingerprint = 3;
}

message ReqMessagesDiscardEncryption {
	int32 Chat_id = 1;
}

message ReqMessagesSetEncryptedTyping {
// default: InputEncryptedChat
	TypeInputEncryptedChat Peer = 1;
// default: Bool
	TypeBool Typing = 2;
}

message ReqMessagesReadEncryptedHistory {
// default: InputEncryptedChat
	TypeInputEncryptedChat Peer = 1;
	int32 Max_date = 2;
}

message ReqMessagesSendEncrypted {
// default: InputEncryptedChat
	TypeInputEncryptedChat Peer = 1;
	int64 Random_id = 2;
	bytes Data = 3;
}

message ReqMessagesSendEncryptedFile {
// default: InputEncryptedChat
	TypeInputEncryptedChat Peer = 1;
	int64 Random_id = 2;
	bytes Data = 3;
// default: InputEncryptedFile
	TypeInputEncryptedFile File = 4;
}

message ReqMessagesSendEncryptedService {
// default: InputEncryptedChat
	TypeInputEncryptedChat Peer = 1;
	int64 Random_id = 2;
	bytes Data = 3;
}

message ReqMessagesReceivedQueue {
	int32 Max_qts = 1;
}

message ReqUploadSaveBigFilePart {
	int64 File_id = 1;
	int32 File_part = 2;
	int32 File_total_parts = 3;
	bytes Bytes = 4;
}

message ReqInitConnection {
	int32 Api_id = 1;
	string Device_model = 2;
	string System_version = 3;
	string App_version = 4;
	string System_lang_code = 5;
	string Lang_pack = 6;
	string Lang_code = 7;
	google.protobuf.Any Query = 8;
}

message ReqHelpGetSupport {
}

message ReqAuthBindTempAuthKey {
	int64 Perm_auth_key_id = 1;
	int64 Nonce = 2;
	int32 Expires_at = 3;
	bytes Encrypted_message = 4;
}

message ReqContactsExportCard {
}

message ReqContactsImportCard {
	repeated int32 Export_card = 1;
}

message ReqMessagesReadMessageContents {
	repeated int32 Id = 1;
}

message ReqAccountCheckUsername {
	string Username = 1;
}

message ReqAccountUpdateUsername {
	string Username = 1;
}

message ReqAccountGetPrivacy {
// default: InputPrivacyKey
	TypeInputPrivacyKey Key = 1;
}

message ReqAccountSetPrivacy {
// default: InputPrivacyKey
	TypeInputPrivacyKey Key = 1;
// default: Vector<InputPrivacyRule>
	repeated TypeInputPrivacyRule Rules = 2;
}

message ReqAccountDeleteAccount {
	string Reason = 1;
}

message ReqAccountGetAccountTTL {
}

message ReqAccountSetAccountTTL {
// default: AccountDaysTTL
	TypeAccountDaysTTL Ttl = 1;
}

message ReqInvokeWithLayer {
	int32 Layer = 1;
	google.protobuf.Any Query = 2;
}

message ReqContactsResolveUsername {
	string Username = 1;
}

message ReqAccountSendChangePhoneCode {
	int32 Flags = 1;
// Allow_flashcall	bool // flags.0?true
	string Phone_number = 3;
// default: Bool
	TypeBool Current_number = 4;// flags.0?Bool
}

message ReqAccountChangePhone {
	string Phone_number = 1;
	string Phone_code_hash = 2;
	string Phone_code = 3;
}

message ReqMessagesGetAllStickers {
	int32 Hash = 1;
}

message ReqAccountUpdateDeviceLocked {
	int32 Period = 1;
}

message ReqAccountGetPassword {
}

message ReqAuthCheckPassword {
	bytes Password_hash = 1;
}

message ReqMessagesGetWebPagePreview {
	string Message = 1;
}

message ReqAccountGetAuthorizations {
}

message ReqAccountResetAuthorization {
	int64 Hash = 1;
}

message ReqAccountGetPasswordSettings {
	bytes Current_password_hash = 1;
}

message ReqAccountUpdatePasswordSettings {
	bytes Current_password_hash = 1;
// default: accountPasswordInputSettings
	TypeAccountPasswordInputSettings New_settings = 2;
}

message ReqAuthRequestPasswordRecovery {
}

message ReqAuthRecoverPassword {
	string Code = 1;
}

message ReqInvokeWithoutUpdates {
	google.protobuf.Any Query = 1;
}

message ReqMessagesExportChatInvite {
	int32 Chat_id = 1;
}

message ReqMessagesCheckChatInvite {
	string Hash = 1;
}

message ReqMessagesImportChatInvite {
	string Hash = 1;
}

message ReqMessagesGetStickerSet {
// default: InputStickerSet
	TypeInputStickerSet Stickerset = 1;
}

message ReqMessagesInstallStickerSet {
// default: InputStickerSet
	TypeInputStickerSet Stickerset = 1;
// default: Bool
	TypeBool Archived = 2;
}

message ReqMessagesUninstallStickerSet {
// default: InputStickerSet
	TypeInputStickerSet Stickerset = 1;
}

message ReqAuthImportBotAuthorization {
	int32 Flags = 1;
	int32 Api_id = 2;
	string Api_hash = 3;
	string Bot_auth_token = 4;
}

message ReqMessagesStartBot {
// default: InputUser
	TypeInputUser Bot = 1;
// default: InputPeer
	TypeInputPeer Peer = 2;
	int64 Random_id = 3;
	string Start_param = 4;
}

message ReqHelpGetAppChangelog {
	string Prev_app_version = 1;
}

message ReqMessagesReportSpam {
// default: InputPeer
	TypeInputPeer Peer = 1;
}

message ReqMessagesGetMessagesViews {
// default: InputPeer
	TypeInputPeer Peer = 1;
	repeated int32 Id = 2;
// default: Bool
	TypeBool Increment = 3;
}

message ReqUpdatesGetChannelDifference {
	int32 Flags = 1;
// Force	bool // flags.0?true
// default: InputChannel
	TypeInputChannel Channel = 3;
// default: ChannelMessagesFilter
	TypeChannelMessagesFilter Filter = 4;
	int32 Pts = 5;
	int32 Limit = 6;
}

message ReqChannelsReadHistory {
// default: InputChannel
	TypeInputChannel Channel = 1;
	int32 Max_id = 2;
}

message ReqChannelsDeleteMessages {
// default: InputChannel
	TypeInputChannel Channel = 1;
	repeated int32 Id = 2;
}

message ReqChannelsDeleteUserHistory {
// default: InputChannel
	TypeInputChannel Channel = 1;
// default: InputUser
	TypeInputUser User_id = 2;
}

message ReqChannelsReportSpam {
// default: InputChannel
	TypeInputChannel Channel = 1;
// default: InputUser
	TypeInputUser User_id = 2;
	repeated int32 Id = 3;
}

message ReqChannelsGetMessages {
// default: InputChannel
	TypeInputChannel Channel = 1;
	repeated int32 Id = 2;
}

message ReqChannelsGetParticipants {
// default: InputChannel
	TypeInputChannel Channel = 1;
// default: ChannelParticipantsFilter
	TypeChannelParticipantsFilter Filter = 2;
	int32 Offset = 3;
	int32 Limit = 4;
}

message ReqChannelsGetParticipant {
// default: InputChannel
	TypeInputChannel Channel = 1;
// default: InputUser
	TypeInputUser User_id = 2;
}

message ReqChannelsGetChannels {
// default: Vector<InputChannel>
	repeated TypeInputChannel Id = 1;
}

message ReqChannelsGetFullChannel {
// default: InputChannel
	TypeInputChannel Channel = 1;
}

message ReqChannelsCreateChannel {
	int32 Flags = 1;
// Broadcast	bool // flags.0?true
// Megagroup	bool // flags.1?true
	string Title = 4;
	string About = 5;
}

message ReqChannelsEditAbout {
// default: InputChannel
	TypeInputChannel Channel = 1;
	string About = 2;
}

message ReqChannelsEditAdmin {
// default: InputChannel
	TypeInputChannel Channel = 1;
// default: InputUser
	TypeInputUser User_id = 2;
// default: ChannelAdminRights
	TypeChannelAdminRights Admin_rights = 3;
}

message ReqChannelsEditTitle {
// default: InputChannel
	TypeInputChannel Channel = 1;
	string Title = 2;
}

message ReqChannelsEditPhoto {
// default: InputChannel
	TypeInputChannel Channel = 1;
// default: InputChatPhoto
	TypeInputChatPhoto Photo = 2;
}

message ReqChannelsCheckUsername {
// default: InputChannel
	TypeInputChannel Channel = 1;
	string Username = 2;
}

message ReqChannelsUpdateUsername {
// default: InputChannel
	TypeInputChannel Channel = 1;
	string Username = 2;
}

message ReqChannelsJoinChannel {
// default: InputChannel
	TypeInputChannel Channel = 1;
}

message ReqChannelsLeaveChannel {
// default: InputChannel
	TypeInputChannel Channel = 1;
}

message ReqChannelsInviteToChannel {
// default: InputChannel
	TypeInputChannel Channel = 1;
// default: Vector<InputUser>
	repeated TypeInputUser Users = 2;
}

message ReqChannelsExportInvite {
// default: InputChannel
	TypeInputChannel Channel = 1;
}

message ReqChannelsDeleteChannel {
// default: InputChannel
	TypeInputChannel Channel = 1;
}

message ReqMessagesToggleChatAdmins {
	int32 Chat_id = 1;
// default: Bool
	TypeBool Enabled = 2;
}

message ReqMessagesEditChatAdmin {
	int32 Chat_id = 1;
// default: InputUser
	TypeInputUser User_id = 2;
// default: Bool
	TypeBool Is_admin = 3;
}

message ReqMessagesMigrateChat {
	int32 Chat_id = 1;
}

message ReqMessagesSearchGlobal {
	string Q = 1;
	int32 Offset_date = 2;
// default: InputPeer
	TypeInputPeer Offset_peer = 3;
	int32 Offset_id = 4;
	int32 Limit = 5;
}

message ReqAccountReportPeer {
// default: InputPeer
	TypeInputPeer Peer = 1;
// default: ReportReason
	TypeReportReason Reason = 2;
}

message ReqMessagesReorderStickerSets {
	int32 Flags = 1;
// Masks	bool // flags.0?true
	repeated int64 Order = 3;
}

message ReqHelpGetTermsOfService {
}

message ReqMessagesGetDocumentByHash {
	bytes Sha256 = 1;
	int32 Size = 2;
	string Mime_type = 3;
}

message ReqMessagesSearchGifs {
	string Q = 1;
	int32 Offset = 2;
}

message ReqMessagesGetSavedGifs {
	int32 Hash = 1;
}

message ReqMessagesSaveGif {
// default: InputDocument
	TypeInputDocument Id = 1;
// default: Bool
	TypeBool Unsave = 2;
}

message ReqMessagesGetInlineBotResults {
	int32 Flags = 1;
// default: InputUser
	TypeInputUser Bot = 2;
// default: InputPeer
	TypeInputPeer Peer = 3;
// default: InputGeoPoint
	TypeInputGeoPoint Geo_point = 4;// flags.0?InputGeoPoint
	string Query = 5;
	string Offset = 6;
}

message ReqMessagesSetInlineBotResults {
	int32 Flags = 1;
// Gallery	bool // flags.0?true
// Private	bool // flags.1?true
	int64 Query_id = 4;
// default: Vector<InputBotInlineResult>
	repeated TypeInputBotInlineResult Results = 5;
	int32 Cache_time = 6;
	string Next_offset = 7;
// default: InlineBotSwitchPM
	TypeInlineBotSwitchPM Switch_pm = 8;// flags.3?InlineBotSwitchPM
}

message ReqMessagesSendInlineBotResult {
	int32 Flags = 1;
// Silent	bool // flags.5?true
// Background	bool // flags.6?true
// Clear_draft	bool // flags.7?true
// default: InputPeer
	TypeInputPeer Peer = 5;
	int32 Reply_to_msg_id = 6;
	int64 Random_id = 7;
	int64 Query_id = 8;
	string Id = 9;
}

message ReqChannelsToggleInvites {
// default: InputChannel
	TypeInputChannel Channel = 1;
// default: Bool
	TypeBool Enabled = 2;
}

message ReqChannelsExportMessageLink {
// default: InputChannel
	TypeInputChannel Channel = 1;
	int32 Id = 2;
}

message ReqChannelsToggleSignatures {
// default: InputChannel
	TypeInputChannel Channel = 1;
// default: Bool
	TypeBool Enabled = 2;
}

message ReqMessagesHideReportSpam {
// default: InputPeer
	TypeInputPeer Peer = 1;
}

message ReqMessagesGetPeerSettings {
// default: InputPeer
	TypeInputPeer Peer = 1;
}

message ReqChannelsUpdatePinnedMessage {
	int32 Flags = 1;
// Silent	bool // flags.0?true
// default: InputChannel
	TypeInputChannel Channel = 3;
	int32 Id = 4;
}

message ReqAuthResendCode {
	string Phone_number = 1;
	string Phone_code_hash = 2;
}

message ReqAuthCancelCode {
	string Phone_number = 1;
	string Phone_code_hash = 2;
}

message ReqMessagesGetMessageEditData {
// default: InputPeer
	TypeInputPeer Peer = 1;
	int32 Id = 2;
}

message ReqMessagesEditMessage {
	int32 Flags = 1;
// No_webpage	bool // flags.1?true
// default: InputPeer
	TypeInputPeer Peer = 3;
	int32 Id = 4;
	string Message = 5;
// default: ReplyMarkup
	TypeReplyMarkup Reply_markup = 6;// flags.2?ReplyMarkup
// default: Vector<MessageEntity>
	repeated TypeMessageEntity Entities = 7;// flags.3?Vector<MessageEntity>
}

message ReqMessagesEditInlineBotMessage {
	int32 Flags = 1;
// No_webpage	bool // flags.1?true
// default: InputBotInlineMessageID
	TypeInputBotInlineMessageID Id = 3;
	string Message = 4;
// default: ReplyMarkup
	TypeReplyMarkup Reply_markup = 5;// flags.2?ReplyMarkup
// default: Vector<MessageEntity>
	repeated TypeMessageEntity Entities = 6;// flags.3?Vector<MessageEntity>
}

message ReqMessagesGetBotCallbackAnswer {
	int32 Flags = 1;
// Game	bool // flags.1?true
// default: InputPeer
	TypeInputPeer Peer = 3;
	int32 Msg_id = 4;
	bytes Data = 5;
}

message ReqMessagesSetBotCallbackAnswer {
	int32 Flags = 1;
// Alert	bool // flags.1?true
	int64 Query_id = 3;
	string Message = 4;
	string Url = 5;
	int32 Cache_time = 6;
}

message ReqContactsGetTopPeers {
	int32 Flags = 1;
// Correspondents	bool // flags.0?true
// Bots_pm	bool // flags.1?true
// Bots_inline	bool // flags.2?true
// Phone_calls	bool // flags.3?true
// Groups	bool // flags.10?true
// Channels	bool // flags.15?true
	int32 Offset = 8;
	int32 Limit = 9;
	int32 Hash = 10;
}

message ReqContactsResetTopPeerRating {
// default: TopPeerCategory
	TypeTopPeerCategory Category = 1;
// default: InputPeer
	TypeInputPeer Peer = 2;
}

message ReqMessagesGetPeerDialogs {
// default: Vector<InputPeer>
	repeated TypeInputPeer Peers = 1;
}

message ReqMessagesSaveDraft {
	int32 Flags = 1;
// No_webpage	bool // flags.1?true
	int32 Reply_to_msg_id = 3;
// default: InputPeer
	TypeInputPeer Peer = 4;
	string Message = 5;
// default: Vector<MessageEntity>
	repeated TypeMessageEntity Entities = 6;// flags.3?Vector<MessageEntity>
}

message ReqMessagesGetAllDrafts {
}

message ReqAccountSendConfirmPhoneCode {
	int32 Flags = 1;
// Allow_flashcall	bool // flags.0?true
	string Hash = 3;
// default: Bool
	TypeBool Current_number = 4;// flags.0?Bool
}

message ReqAccountConfirmPhone {
	string Phone_code_hash = 1;
	string Phone_code = 2;
}

message ReqMessagesGetFeaturedStickers {
	int32 Hash = 1;
}

message ReqMessagesReadFeaturedStickers {
	repeated int64 Id = 1;
}

message ReqMessagesGetRecentStickers {
	int32 Flags = 1;
// Attached	bool // flags.0?true
	int32 Hash = 3;
}

message ReqMessagesSaveRecentSticker {
	int32 Flags = 1;
// Attached	bool // flags.0?true
// default: InputDocument
	TypeInputDocument Id = 3;
// default: Bool
	TypeBool Unsave = 4;
}

message ReqMessagesClearRecentStickers {
	int32 Flags = 1;
// Attached	bool // flags.0?true
}

message ReqMessagesGetArchivedStickers {
	int32 Flags = 1;
// Masks	bool // flags.0?true
	int64 Offset_id = 3;
	int32 Limit = 4;
}

message ReqChannelsGetAdminedPublicChannels {
}

message ReqAuthDropTempAuthKeys {
	repeated int64 Except_auth_keys = 1;
}

message ReqMessagesSetGameScore {
	int32 Flags = 1;
// Edit_message	bool // flags.0?true
// Force	bool // flags.1?true
// default: InputPeer
	TypeInputPeer Peer = 4;
	int32 Id = 5;
// default: InputUser
	TypeInputUser User_id = 6;
	int32 Score = 7;
}

message ReqMessagesSetInlineGameScore {
	int32 Flags = 1;
// Edit_message	bool // flags.0?true
// Force	bool // flags.1?true
// default: InputBotInlineMessageID
	TypeInputBotInlineMessageID Id = 4;
// default: InputUser
	TypeInputUser User_id = 5;
	int32 Score = 6;
}

message ReqMessagesGetMaskStickers {
	int32 Hash = 1;
}

message ReqMessagesGetAttachedStickers {
// default: InputStickeredMedia
	TypeInputStickeredMedia Media = 1;
}

message ReqMessagesGetGameHighScores {
// default: InputPeer
	TypeInputPeer Peer = 1;
	int32 Id = 2;
// default: InputUser
	TypeInputUser User_id = 3;
}

message ReqMessagesGetInlineGameHighScores {
// default: InputBotInlineMessageID
	TypeInputBotInlineMessageID Id = 1;
// default: InputUser
	TypeInputUser User_id = 2;
}

message ReqMessagesGetCommonChats {
// default: InputUser
	TypeInputUser User_id = 1;
	int32 Max_id = 2;
	int32 Limit = 3;
}

message ReqMessagesGetAllChats {
	repeated int32 Except_ids = 1;
}

message ReqHelpSetBotUpdatesStatus {
	int32 Pending_updates_count = 1;
	string Message = 2;
}

message ReqMessagesGetWebPage {
	string Url = 1;
	int32 Hash = 2;
}

message ReqMessagesToggleDialogPin {
	int32 Flags = 1;
// Pinned	bool // flags.0?true
// default: InputPeer
	TypeInputPeer Peer = 3;
}

message ReqMessagesReorderPinnedDialogs {
	int32 Flags = 1;
// Force	bool // flags.0?true
// default: Vector<InputPeer>
	repeated TypeInputPeer Order = 3;
}

message ReqMessagesGetPinnedDialogs {
}

message ReqPhoneRequestCall {
// default: InputUser
	TypeInputUser User_id = 1;
	int32 Random_id = 2;
	bytes G_a_hash = 3;
// default: PhoneCallProtocol
	TypePhoneCallProtocol Protocol = 4;
}

message ReqPhoneAcceptCall {
// default: InputPhoneCall
	TypeInputPhoneCall Peer = 1;
	bytes G_b = 2;
// default: PhoneCallProtocol
	TypePhoneCallProtocol Protocol = 3;
}

message ReqPhoneDiscardCall {
// default: InputPhoneCall
	TypeInputPhoneCall Peer = 1;
	int32 Duration = 2;
// default: PhoneCallDiscardReason
	TypePhoneCallDiscardReason Reason = 3;
	int64 Connection_id = 4;
}

message ReqPhoneReceivedCall {
// default: InputPhoneCall
	TypeInputPhoneCall Peer = 1;
}

message ReqMessagesReportEncryptedSpam {
// default: InputEncryptedChat
	TypeInputEncryptedChat Peer = 1;
}

message ReqPaymentsGetPaymentForm {
	int32 Msg_id = 1;
}

message ReqPaymentsSendPaymentForm {
	int32 Flags = 1;
	int32 Msg_id = 2;
	string Requested_info_id = 3;
	string Shipping_option_id = 4;
// default: InputPaymentCredentials
	TypeInputPaymentCredentials Credentials = 5;
}

message ReqAccountGetTmpPassword {
	bytes Password_hash = 1;
	int32 Period = 2;
}

message ReqMessagesSetBotShippingResults {
	int32 Flags = 1;
	int64 Query_id = 2;
	string Error = 3;
// default: Vector<ShippingOption>
	repeated TypeShippingOption Shipping_options = 4;// flags.1?Vector<ShippingOption>
}

message ReqMessagesSetBotPrecheckoutResults {
	int32 Flags = 1;
// Success	bool // flags.1?true
	int64 Query_id = 3;
	string Error = 4;
}

message ReqUploadGetWebFile {
// default: InputWebFileLocation
	TypeInputWebFileLocation Location = 1;
	int32 Offset = 2;
	int32 Limit = 3;
}

message ReqBotsSendCustomRequest {
	string Custom_method = 1;
// default: DataJSON
	TypeDataJSON Params = 2;
}

message ReqBotsAnswerWebhookJSONQuery {
	int64 Query_id = 1;
// default: DataJSON
	TypeDataJSON Data = 2;
}

message ReqPaymentsGetPaymentReceipt {
	int32 Msg_id = 1;
}

message ReqPaymentsValidateRequestedInfo {
	int32 Flags = 1;
// Save	bool // flags.0?true
	int32 Msg_id = 3;
// default: PaymentRequestedInfo
	TypePaymentRequestedInfo Info = 4;
}

message ReqPaymentsGetSavedInfo {
}

message ReqPaymentsClearSavedInfo {
	int32 Flags = 1;
// Credentials	bool // flags.0?true
// Info	bool // flags.1?true
}

message ReqPhoneGetCallConfig {
}

message ReqPhoneConfirmCall {
// default: InputPhoneCall
	TypeInputPhoneCall Peer = 1;
	bytes G_a = 2;
	int64 Key_fingerprint = 3;
// default: PhoneCallProtocol
	TypePhoneCallProtocol Protocol = 4;
}

message ReqPhoneSetCallRating {
// default: InputPhoneCall
	TypeInputPhoneCall Peer = 1;
	int32 Rating = 2;
	string Comment = 3;
}

message ReqPhoneSaveCallDebug {
// default: InputPhoneCall
	TypeInputPhoneCall Peer = 1;
// default: DataJSON
	TypeDataJSON Debug = 2;
}

message ReqUploadGetCdnFile {
	bytes File_token = 1;
	int32 Offset = 2;
	int32 Limit = 3;
}

message ReqUploadReuploadCdnFile {
	bytes File_token = 1;
	bytes Request_token = 2;
}

message ReqHelpGetCdnConfig {
}

message ReqMessagesUploadMedia {
// default: InputPeer
	TypeInputPeer Peer = 1;
// default: InputMedia
	TypeInputMedia Media = 2;
}

message ReqStickersCreateStickerSet {
	int32 Flags = 1;
// Masks	bool // flags.0?true
// default: InputUser
	TypeInputUser User_id = 3;
	string Title = 4;
	string Short_name = 5;
// default: Vector<InputStickerSetItem>
	repeated TypeInputStickerSetItem Stickers = 6;
}

message ReqLangpackGetLangPack {
	string Lang_code = 1;
}

message ReqLangpackGetStrings {
	string Lang_code = 1;
	repeated string Keys = 2;
}

message ReqLangpackGetDifference {
	int32 From_version = 1;
}

message ReqLangpackGetLanguages {
}

message ReqChannelsEditBanned {
// default: InputChannel
	TypeInputChannel Channel = 1;
// default: InputUser
	TypeInputUser User_id = 2;
// default: ChannelBannedRights
	TypeChannelBannedRights Banned_rights = 3;
}

message ReqChannelsGetAdminLog {
	int32 Flags = 1;
// default: InputChannel
	TypeInputChannel Channel = 2;
	string Q = 3;
// default: ChannelAdminLogEventsFilter
	TypeChannelAdminLogEventsFilter Events_filter = 4;// flags.0?ChannelAdminLogEventsFilter
// default: Vector<InputUser>
	repeated TypeInputUser Admins = 5;// flags.1?Vector<InputUser>
	int64 Max_id = 6;
	int64 Min_id = 7;
	int32 Limit = 8;
}

message ReqStickersRemoveStickerFromSet {
// default: InputDocument
	TypeInputDocument Sticker = 1;
}

message ReqStickersChangeStickerPosition {
// default: InputDocument
	TypeInputDocument Sticker = 1;
	int32 Position = 2;
}

message ReqStickersAddStickerToSet {
// default: InputStickerSet
	TypeInputStickerSet Stickerset = 1;
// default: InputStickerSetItem
	TypeInputStickerSetItem Sticker = 2;
}

message ReqMessagesSendScreenshotNotification {
// default: InputPeer
	TypeInputPeer Peer = 1;
	int32 Reply_to_msg_id = 2;
	int64 Random_id = 3;
}

message ReqUploadGetCdnFileHashes {
	bytes File_token = 1;
	int32 Offset = 2;
}

message ReqMessagesGetUnreadMentions {
// default: InputPeer
	TypeInputPeer Peer = 1;
	int32 Offset_id = 2;
	int32 Add_offset = 3;
	int32 Limit = 4;
	int32 Max_id = 5;
	int32 Min_id = 6;
}

message ReqMessagesFaveSticker {
// default: InputDocument
	TypeInputDocument Id = 1;
// default: Bool
	TypeBool Unfave = 2;
}

message ReqChannelsSetStickers {
// default: InputChannel
	TypeInputChannel Channel = 1;
// default: InputStickerSet
	TypeInputStickerSet Stickerset = 2;
}

message ReqContactsResetSaved {
}

message ReqMessagesGetFavedStickers {
	int32 Hash = 1;
}

message ReqChannelsReadMessageContents {
// default: InputChannel
	TypeInputChannel Channel = 1;
	repeated int32 Id = 2;
}



// Procedures
service Mtproto {
	rpc InvokeAfterMsg (ReqInvokeAfterMsg) returns (google.protobuf.Any) {}
	rpc InvokeAfterMsgs (ReqInvokeAfterMsgs) returns (google.protobuf.Any) {}
	rpc AuthCheckPhone (ReqAuthCheckPhone) returns (TypeAuthCheckedPhone) {}
	rpc AuthSendCode (ReqAuthSendCode) returns (TypeAuthSentCode) {}
	rpc AuthSignUp (ReqAuthSignUp) returns (TypeAuthAuthorization) {}
	rpc AuthSignIn (ReqAuthSignIn) returns (TypeAuthAuthorization) {}
	rpc AuthLogOut (ReqAuthLogOut) returns (TypeBool) {}
	rpc AuthResetAuthorizations (ReqAuthResetAuthorizations) returns (TypeBool) {}
	rpc AuthSendInvites (ReqAuthSendInvites) returns (TypeBool) {}
	rpc AuthExportAuthorization (ReqAuthExportAuthorization) returns (TypeAuthExportedAuthorization) {}
	rpc AuthImportAuthorization (ReqAuthImportAuthorization) returns (TypeAuthAuthorization) {}
	rpc AccountRegisterDevice (ReqAccountRegisterDevice) returns (TypeBool) {}
	rpc AccountUnregisterDevice (ReqAccountUnregisterDevice) returns (TypeBool) {}
	rpc AccountUpdateNotifySettings (ReqAccountUpdateNotifySettings) returns (TypeBool) {}
	rpc AccountGetNotifySettings (ReqAccountGetNotifySettings) returns (TypePeerNotifySettings) {}
	rpc AccountResetNotifySettings (ReqAccountResetNotifySettings) returns (TypeBool) {}
	rpc AccountUpdateProfile (ReqAccountUpdateProfile) returns (TypeUser) {}
	rpc AccountUpdateStatus (ReqAccountUpdateStatus) returns (TypeBool) {}
	rpc AccountGetWallPapers (ReqAccountGetWallPapers) returns (TypeVectorWallPaper) {}
	rpc UsersGetUsers (ReqUsersGetUsers) returns (TypeVectorUser) {}
	rpc UsersGetFullUser (ReqUsersGetFullUser) returns (TypeUserFull) {}
	rpc ContactsGetStatuses (ReqContactsGetStatuses) returns (TypeVectorContactStatus) {}
	rpc ContactsGetContacts (ReqContactsGetContacts) returns (TypeContactsContacts) {}
	rpc ContactsImportContacts (ReqContactsImportContacts) returns (TypeContactsImportedContacts) {}
	rpc ContactsSearch (ReqContactsSearch) returns (TypeContactsFound) {}
	rpc ContactsDeleteContact (ReqContactsDeleteContact) returns (TypeContactsLink) {}
	rpc ContactsDeleteContacts (ReqContactsDeleteContacts) returns (TypeBool) {}
	rpc ContactsBlock (ReqContactsBlock) returns (TypeBool) {}
	rpc ContactsUnblock (ReqContactsUnblock) returns (TypeBool) {}
	rpc ContactsGetBlocked (ReqContactsGetBlocked) returns (TypeContactsBlocked) {}
	rpc MessagesGetMessages (ReqMessagesGetMessages) returns (TypeMessagesMessages) {}
	rpc MessagesGetDialogs (ReqMessagesGetDialogs) returns (TypeMessagesDialogs) {}
	rpc MessagesGetHistory (ReqMessagesGetHistory) returns (TypeMessagesMessages) {}
	rpc MessagesSearch (ReqMessagesSearch) returns (TypeMessagesMessages) {}
	rpc MessagesReadHistory (ReqMessagesReadHistory) returns (TypeMessagesAffectedMessages) {}
	rpc MessagesDeleteHistory (ReqMessagesDeleteHistory) returns (TypeMessagesAffectedHistory) {}
	rpc MessagesDeleteMessages (ReqMessagesDeleteMessages) returns (TypeMessagesAffectedMessages) {}
	rpc MessagesReceivedMessages (ReqMessagesReceivedMessages) returns (TypeVectorReceivedNotifyMessage) {}
	rpc MessagesSetTyping (ReqMessagesSetTyping) returns (TypeBool) {}
	rpc MessagesSendMessage (ReqMessagesSendMessage) returns (TypeUpdates) {}
	rpc MessagesSendMedia (ReqMessagesSendMedia) returns (TypeUpdates) {}
	rpc MessagesForwardMessages (ReqMessagesForwardMessages) returns (TypeUpdates) {}
	rpc MessagesGetChats (ReqMessagesGetChats) returns (TypeMessagesChats) {}
	rpc MessagesGetFullChat (ReqMessagesGetFullChat) returns (TypeMessagesChatFull) {}
	rpc MessagesEditChatTitle (ReqMessagesEditChatTitle) returns (TypeUpdates) {}
	rpc MessagesEditChatPhoto (ReqMessagesEditChatPhoto) returns (TypeUpdates) {}
	rpc MessagesAddChatUser (ReqMessagesAddChatUser) returns (TypeUpdates) {}
	rpc MessagesDeleteChatUser (ReqMessagesDeleteChatUser) returns (TypeUpdates) {}
	rpc MessagesCreateChat (ReqMessagesCreateChat) returns (TypeUpdates) {}
	rpc UpdatesGetState (ReqUpdatesGetState) returns (TypeUpdatesState) {}
	rpc UpdatesGetDifference (ReqUpdatesGetDifference) returns (TypeUpdatesDifference) {}
	rpc PhotosUpdateProfilePhoto (ReqPhotosUpdateProfilePhoto) returns (TypeUserProfilePhoto) {}
	rpc PhotosUploadProfilePhoto (ReqPhotosUploadProfilePhoto) returns (TypePhotosPhoto) {}
	rpc UploadSaveFilePart (ReqUploadSaveFilePart) returns (TypeBool) {}
	rpc UploadGetFile (ReqUploadGetFile) returns (TypeUploadFile) {}
	rpc HelpGetConfig (ReqHelpGetConfig) returns (TypeConfig) {}
	rpc HelpGetNearestDc (ReqHelpGetNearestDc) returns (TypeNearestDc) {}
	rpc HelpGetAppUpdate (ReqHelpGetAppUpdate) returns (TypeHelpAppUpdate) {}
	rpc HelpSaveAppLog (ReqHelpSaveAppLog) returns (TypeBool) {}
	rpc HelpGetInviteText (ReqHelpGetInviteText) returns (TypeHelpInviteText) {}
	rpc PhotosDeletePhotos (ReqPhotosDeletePhotos) returns (TypeVectorLong) {}
	rpc PhotosGetUserPhotos (ReqPhotosGetUserPhotos) returns (TypePhotosPhotos) {}
	rpc MessagesForwardMessage (ReqMessagesForwardMessage) returns (TypeUpdates) {}
	rpc MessagesGetDhConfig (ReqMessagesGetDhConfig) returns (TypeMessagesDhConfig) {}
	rpc MessagesRequestEncryption (ReqMessagesRequestEncryption) returns (TypeEncryptedChat) {}
	rpc MessagesAcceptEncryption (ReqMessagesAcceptEncryption) returns (TypeEncryptedChat) {}
	rpc MessagesDiscardEncryption (ReqMessagesDiscardEncryption) returns (TypeBool) {}
	rpc MessagesSetEncryptedTyping (ReqMessagesSetEncryptedTyping) returns (TypeBool) {}
	rpc MessagesReadEncryptedHistory (ReqMessagesReadEncryptedHistory) returns (TypeBool) {}
	rpc MessagesSendEncrypted (ReqMessagesSendEncrypted) returns (TypeMessagesSentEncryptedMessage) {}
	rpc MessagesSendEncryptedFile (ReqMessagesSendEncryptedFile) returns (TypeMessagesSentEncryptedMessage) {}
	rpc MessagesSendEncryptedService (ReqMessagesSendEncryptedService) returns (TypeMessagesSentEncryptedMessage) {}
	rpc MessagesReceivedQueue (ReqMessagesReceivedQueue) returns (TypeVectorLong) {}
	rpc UploadSaveBigFilePart (ReqUploadSaveBigFilePart) returns (TypeBool) {}
	rpc InitConnection (ReqInitConnection) returns (google.protobuf.Any) {}
	rpc HelpGetSupport (ReqHelpGetSupport) returns (TypeHelpSupport) {}
	rpc AuthBindTempAuthKey (ReqAuthBindTempAuthKey) returns (TypeBool) {}
	rpc ContactsExportCard (ReqContactsExportCard) returns (TypeVectorInt) {}
	rpc ContactsImportCard (ReqContactsImportCard) returns (TypeUser) {}
	rpc MessagesReadMessageContents (ReqMessagesReadMessageContents) returns (TypeMessagesAffectedMessages) {}
	rpc AccountCheckUsername (ReqAccountCheckUsername) returns (TypeBool) {}
	rpc AccountUpdateUsername (ReqAccountUpdateUsername) returns (TypeUser) {}
	rpc AccountGetPrivacy (ReqAccountGetPrivacy) returns (TypeAccountPrivacyRules) {}
	rpc AccountSetPrivacy (ReqAccountSetPrivacy) returns (TypeAccountPrivacyRules) {}
	rpc AccountDeleteAccount (ReqAccountDeleteAccount) returns (TypeBool) {}
	rpc AccountGetAccountTTL (ReqAccountGetAccountTTL) returns (TypeAccountDaysTTL) {}
	rpc AccountSetAccountTTL (ReqAccountSetAccountTTL) returns (TypeBool) {}
	rpc InvokeWithLayer (ReqInvokeWithLayer) returns (google.protobuf.Any) {}
	rpc ContactsResolveUsername (ReqContactsResolveUsername) returns (TypeContactsResolvedPeer) {}
	rpc AccountSendChangePhoneCode (ReqAccountSendChangePhoneCode) returns (TypeAuthSentCode) {}
	rpc AccountChangePhone (ReqAccountChangePhone) returns (TypeUser) {}
	rpc MessagesGetAllStickers (ReqMessagesGetAllStickers) returns (TypeMessagesAllStickers) {}
	rpc AccountUpdateDeviceLocked (ReqAccountUpdateDeviceLocked) returns (TypeBool) {}
	rpc AccountGetPassword (ReqAccountGetPassword) returns (TypeAccountPassword) {}
	rpc AuthCheckPassword (ReqAuthCheckPassword) returns (TypeAuthAuthorization) {}
	rpc MessagesGetWebPagePreview (ReqMessagesGetWebPagePreview) returns (TypeMessageMedia) {}
	rpc AccountGetAuthorizations (ReqAccountGetAuthorizations) returns (TypeAccountAuthorizations) {}
	rpc AccountResetAuthorization (ReqAccountResetAuthorization) returns (TypeBool) {}
	rpc AccountGetPasswordSettings (ReqAccountGetPasswordSettings) returns (TypeAccountPasswordSettings) {}
	rpc AccountUpdatePasswordSettings (ReqAccountUpdatePasswordSettings) returns (TypeBool) {}
	rpc AuthRequestPasswordRecovery (ReqAuthRequestPasswordRecovery) returns (TypeAuthPasswordRecovery) {}
	rpc AuthRecoverPassword (ReqAuthRecoverPassword) returns (TypeAuthAuthorization) {}
	rpc InvokeWithoutUpdates (ReqInvokeWithoutUpdates) returns (google.protobuf.Any) {}
	rpc MessagesExportChatInvite (ReqMessagesExportChatInvite) returns (TypeExportedChatInvite) {}
	rpc MessagesCheckChatInvite (ReqMessagesCheckChatInvite) returns (TypeChatInvite) {}
	rpc MessagesImportChatInvite (ReqMessagesImportChatInvite) returns (TypeUpdates) {}
	rpc MessagesGetStickerSet (ReqMessagesGetStickerSet) returns (TypeMessagesStickerSet) {}
	rpc MessagesInstallStickerSet (ReqMessagesInstallStickerSet) returns (TypeMessagesStickerSetInstallResult) {}
	rpc MessagesUninstallStickerSet (ReqMessagesUninstallStickerSet) returns (TypeBool) {}
	rpc AuthImportBotAuthorization (ReqAuthImportBotAuthorization) returns (TypeAuthAuthorization) {}
	rpc MessagesStartBot (ReqMessagesStartBot) returns (TypeUpdates) {}
	rpc HelpGetAppChangelog (ReqHelpGetAppChangelog) returns (TypeUpdates) {}
	rpc MessagesReportSpam (ReqMessagesReportSpam) returns (TypeBool) {}
	rpc MessagesGetMessagesViews (ReqMessagesGetMessagesViews) returns (TypeVectorInt) {}
	rpc UpdatesGetChannelDifference (ReqUpdatesGetChannelDifference) returns (TypeUpdatesChannelDifference) {}
	rpc ChannelsReadHistory (ReqChannelsReadHistory) returns (TypeBool) {}
	rpc ChannelsDeleteMessages (ReqChannelsDeleteMessages) returns (TypeMessagesAffectedMessages) {}
	rpc ChannelsDeleteUserHistory (ReqChannelsDeleteUserHistory) returns (TypeMessagesAffectedHistory) {}
	rpc ChannelsReportSpam (ReqChannelsReportSpam) returns (TypeBool) {}
	rpc ChannelsGetMessages (ReqChannelsGetMessages) returns (TypeMessagesMessages) {}
	rpc ChannelsGetParticipants (ReqChannelsGetParticipants) returns (TypeChannelsChannelParticipants) {}
	rpc ChannelsGetParticipant (ReqChannelsGetParticipant) returns (TypeChannelsChannelParticipant) {}
	rpc ChannelsGetChannels (ReqChannelsGetChannels) returns (TypeMessagesChats) {}
	rpc ChannelsGetFullChannel (ReqChannelsGetFullChannel) returns (TypeMessagesChatFull) {}
	rpc ChannelsCreateChannel (ReqChannelsCreateChannel) returns (TypeUpdates) {}
	rpc ChannelsEditAbout (ReqChannelsEditAbout) returns (TypeBool) {}
	rpc ChannelsEditAdmin (ReqChannelsEditAdmin) returns (TypeUpdates) {}
	rpc ChannelsEditTitle (ReqChannelsEditTitle) returns (TypeUpdates) {}
	rpc ChannelsEditPhoto (ReqChannelsEditPhoto) returns (TypeUpdates) {}
	rpc ChannelsCheckUsername (ReqChannelsCheckUsername) returns (TypeBool) {}
	rpc ChannelsUpdateUsername (ReqChannelsUpdateUsername) returns (TypeBool) {}
	rpc ChannelsJoinChannel (ReqChannelsJoinChannel) returns (TypeUpdates) {}
	rpc ChannelsLeaveChannel (ReqChannelsLeaveChannel) returns (TypeUpdates) {}
	rpc ChannelsInviteToChannel (ReqChannelsInviteToChannel) returns (TypeUpdates) {}
	rpc ChannelsExportInvite (ReqChannelsExportInvite) returns (TypeExportedChatInvite) {}
	rpc ChannelsDeleteChannel (ReqChannelsDeleteChannel) returns (TypeUpdates) {}
	rpc MessagesToggleChatAdmins (ReqMessagesToggleChatAdmins) returns (TypeUpdates) {}
	rpc MessagesEditChatAdmin (ReqMessagesEditChatAdmin) returns (TypeBool) {}
	rpc MessagesMigrateChat (ReqMessagesMigrateChat) returns (TypeUpdates) {}
	rpc MessagesSearchGlobal (ReqMessagesSearchGlobal) returns (TypeMessagesMessages) {}
	rpc AccountReportPeer (ReqAccountReportPeer) returns (TypeBool) {}
	rpc MessagesReorderStickerSets (ReqMessagesReorderStickerSets) returns (TypeBool) {}
	rpc HelpGetTermsOfService (ReqHelpGetTermsOfService) returns (TypeHelpTermsOfService) {}
	rpc MessagesGetDocumentByHash (ReqMessagesGetDocumentByHash) returns (TypeDocument) {}
	rpc MessagesSearchGifs (ReqMessagesSearchGifs) returns (TypeMessagesFoundGifs) {}
	rpc MessagesGetSavedGifs (ReqMessagesGetSavedGifs) returns (TypeMessagesSavedGifs) {}
	rpc MessagesSaveGif (ReqMessagesSaveGif) returns (TypeBool) {}
	rpc MessagesGetInlineBotResults (ReqMessagesGetInlineBotResults) returns (TypeMessagesBotResults) {}
	rpc MessagesSetInlineBotResults (ReqMessagesSetInlineBotResults) returns (TypeBool) {}
	rpc MessagesSendInlineBotResult (ReqMessagesSendInlineBotResult) returns (TypeUpdates) {}
	rpc ChannelsToggleInvites (ReqChannelsToggleInvites) returns (TypeUpdates) {}
	rpc ChannelsExportMessageLink (ReqChannelsExportMessageLink) returns (TypeExportedMessageLink) {}
	rpc ChannelsToggleSignatures (ReqChannelsToggleSignatures) returns (TypeUpdates) {}
	rpc MessagesHideReportSpam (ReqMessagesHideReportSpam) returns (TypeBool) {}
	rpc MessagesGetPeerSettings (ReqMessagesGetPeerSettings) returns (TypePeerSettings) {}
	rpc ChannelsUpdatePinnedMessage (ReqChannelsUpdatePinnedMessage) returns (TypeUpdates) {}
	rpc AuthResendCode (ReqAuthResendCode) returns (TypeAuthSentCode) {}
	rpc AuthCancelCode (ReqAuthCancelCode) returns (TypeBool) {}
	rpc MessagesGetMessageEditData (ReqMessagesGetMessageEditData) returns (TypeMessagesMessageEditData) {}
	rpc MessagesEditMessage (ReqMessagesEditMessage) returns (TypeUpdates) {}
	rpc MessagesEditInlineBotMessage (ReqMessagesEditInlineBotMessage) returns (TypeBool) {}
	rpc MessagesGetBotCallbackAnswer (ReqMessagesGetBotCallbackAnswer) returns (TypeMessagesBotCallbackAnswer) {}
	rpc MessagesSetBotCallbackAnswer (ReqMessagesSetBotCallbackAnswer) returns (TypeBool) {}
	rpc ContactsGetTopPeers (ReqContactsGetTopPeers) returns (TypeContactsTopPeers) {}
	rpc ContactsResetTopPeerRating (ReqContactsResetTopPeerRating) returns (TypeBool) {}
	rpc MessagesGetPeerDialogs (ReqMessagesGetPeerDialogs) returns (TypeMessagesPeerDialogs) {}
	rpc MessagesSaveDraft (ReqMessagesSaveDraft) returns (TypeBool) {}
	rpc MessagesGetAllDrafts (ReqMessagesGetAllDrafts) returns (TypeUpdates) {}
	rpc AccountSendConfirmPhoneCode (ReqAccountSendConfirmPhoneCode) returns (TypeAuthSentCode) {}
	rpc AccountConfirmPhone (ReqAccountConfirmPhone) returns (TypeBool) {}
	rpc MessagesGetFeaturedStickers (ReqMessagesGetFeaturedStickers) returns (TypeMessagesFeaturedStickers) {}
	rpc MessagesReadFeaturedStickers (ReqMessagesReadFeaturedStickers) returns (TypeBool) {}
	rpc MessagesGetRecentStickers (ReqMessagesGetRecentStickers) returns (TypeMessagesRecentStickers) {}
	rpc MessagesSaveRecentSticker (ReqMessagesSaveRecentSticker) returns (TypeBool) {}
	rpc MessagesClearRecentStickers (ReqMessagesClearRecentStickers) returns (TypeBool) {}
	rpc MessagesGetArchivedStickers (ReqMessagesGetArchivedStickers) returns (TypeMessagesArchivedStickers) {}
	rpc ChannelsGetAdminedPublicChannels (ReqChannelsGetAdminedPublicChannels) returns (TypeMessagesChats) {}
	rpc AuthDropTempAuthKeys (ReqAuthDropTempAuthKeys) returns (TypeBool) {}
	rpc MessagesSetGameScore (ReqMessagesSetGameScore) returns (TypeUpdates) {}
	rpc MessagesSetInlineGameScore (ReqMessagesSetInlineGameScore) returns (TypeBool) {}
	rpc MessagesGetMaskStickers (ReqMessagesGetMaskStickers) returns (TypeMessagesAllStickers) {}
	rpc MessagesGetAttachedStickers (ReqMessagesGetAttachedStickers) returns (TypeVectorStickerSetCovered) {}
	rpc MessagesGetGameHighScores (ReqMessagesGetGameHighScores) returns (TypeMessagesHighScores) {}
	rpc MessagesGetInlineGameHighScores (ReqMessagesGetInlineGameHighScores) returns (TypeMessagesHighScores) {}
	rpc MessagesGetCommonChats (ReqMessagesGetCommonChats) returns (TypeMessagesChats) {}
	rpc MessagesGetAllChats (ReqMessagesGetAllChats) returns (TypeMessagesChats) {}
	rpc HelpSetBotUpdatesStatus (ReqHelpSetBotUpdatesStatus) returns (TypeBool) {}
	rpc MessagesGetWebPage (ReqMessagesGetWebPage) returns (TypeWebPage) {}
	rpc MessagesToggleDialogPin (ReqMessagesToggleDialogPin) returns (TypeBool) {}
	rpc MessagesReorderPinnedDialogs (ReqMessagesReorderPinnedDialogs) returns (TypeBool) {}
	rpc MessagesGetPinnedDialogs (ReqMessagesGetPinnedDialogs) returns (TypeMessagesPeerDialogs) {}
	rpc PhoneRequestCall (ReqPhoneRequestCall) returns (TypePhonePhoneCall) {}
	rpc PhoneAcceptCall (ReqPhoneAcceptCall) returns (TypePhonePhoneCall) {}
	rpc PhoneDiscardCall (ReqPhoneDiscardCall) returns (TypeUpdates) {}
	rpc PhoneReceivedCall (ReqPhoneReceivedCall) returns (TypeBool) {}
	rpc MessagesReportEncryptedSpam (ReqMessagesReportEncryptedSpam) returns (TypeBool) {}
	rpc PaymentsGetPaymentForm (ReqPaymentsGetPaymentForm) returns (TypePaymentsPaymentForm) {}
	rpc PaymentsSendPaymentForm (ReqPaymentsSendPaymentForm) returns (TypePaymentsPaymentResult) {}
	rpc AccountGetTmpPassword (ReqAccountGetTmpPassword) returns (TypeAccountTmpPassword) {}
	rpc MessagesSetBotShippingResults (ReqMessagesSetBotShippingResults) returns (TypeBool) {}
	rpc MessagesSetBotPrecheckoutResults (ReqMessagesSetBotPrecheckoutResults) returns (TypeBool) {}
	rpc UploadGetWebFile (ReqUploadGetWebFile) returns (TypeUploadWebFile) {}
	rpc BotsSendCustomRequest (ReqBotsSendCustomRequest) returns (TypeDataJSON) {}
	rpc BotsAnswerWebhookJSONQuery (ReqBotsAnswerWebhookJSONQuery) returns (TypeBool) {}
	rpc PaymentsGetPaymentReceipt (ReqPaymentsGetPaymentReceipt) returns (TypePaymentsPaymentReceipt) {}
	rpc PaymentsValidateRequestedInfo (ReqPaymentsValidateRequestedInfo) returns (TypePaymentsValidatedRequestedInfo) {}
	rpc PaymentsGetSavedInfo (ReqPaymentsGetSavedInfo) returns (TypePaymentsSavedInfo) {}
	rpc PaymentsClearSavedInfo (ReqPaymentsClearSavedInfo) returns (TypeBool) {}
	rpc PhoneGetCallConfig (ReqPhoneGetCallConfig) returns (TypeDataJSON) {}
	rpc PhoneConfirmCall (ReqPhoneConfirmCall) returns (TypePhonePhoneCall) {}
	rpc PhoneSetCallRating (ReqPhoneSetCallRating) returns (TypeUpdates) {}
	rpc PhoneSaveCallDebug (ReqPhoneSaveCallDebug) returns (TypeBool) {}
	rpc UploadGetCdnFile (ReqUploadGetCdnFile) returns (TypeUploadCdnFile) {}
	rpc UploadReuploadCdnFile (ReqUploadReuploadCdnFile) returns (TypeVectorCdnFileHash) {}
	rpc HelpGetCdnConfig (ReqHelpGetCdnConfig) returns (TypeCdnConfig) {}
	rpc MessagesUploadMedia (ReqMessagesUploadMedia) returns (TypeMessageMedia) {}
	rpc StickersCreateStickerSet (ReqStickersCreateStickerSet) returns (TypeMessagesStickerSet) {}
	rpc LangpackGetLangPack (ReqLangpackGetLangPack) returns (TypeLangPackDifference) {}
	rpc LangpackGetStrings (ReqLangpackGetStrings) returns (TypeVectorLangPackString) {}
	rpc LangpackGetDifference (ReqLangpackGetDifference) returns (TypeLangPackDifference) {}
	rpc LangpackGetLanguages (ReqLangpackGetLanguages) returns (TypeVectorLangPackLanguage) {}
	rpc ChannelsEditBanned (ReqChannelsEditBanned) returns (TypeUpdates) {}
	rpc ChannelsGetAdminLog (ReqChannelsGetAdminLog) returns (TypeChannelsAdminLogResults) {}
	rpc StickersRemoveStickerFromSet (ReqStickersRemoveStickerFromSet) returns (TypeMessagesStickerSet) {}
	rpc StickersChangeStickerPosition (ReqStickersChangeStickerPosition) returns (TypeMessagesStickerSet) {}
	rpc StickersAddStickerToSet (ReqStickersAddStickerToSet) returns (TypeMessagesStickerSet) {}
	rpc MessagesSendScreenshotNotification (ReqMessagesSendScreenshotNotification) returns (TypeUpdates) {}
	rpc UploadGetCdnFileHashes (ReqUploadGetCdnFileHashes) returns (TypeVectorCdnFileHash) {}
	rpc MessagesGetUnreadMentions (ReqMessagesGetUnreadMentions) returns (TypeMessagesMessages) {}
	rpc MessagesFaveSticker (ReqMessagesFaveSticker) returns (TypeBool) {}
	rpc ChannelsSetStickers (ReqChannelsSetStickers) returns (TypeBool) {}
	rpc ContactsResetSaved (ReqContactsResetSaved) returns (TypeBool) {}
	rpc MessagesGetFavedStickers (ReqMessagesGetFavedStickers) returns (TypeMessagesFavedStickers) {}
	rpc ChannelsReadMessageContents (ReqChannelsReadMessageContents) returns (TypeBool) {}
}
